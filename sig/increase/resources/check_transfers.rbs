module Increase
  module Resources
    class CheckTransfers
      def create: (
        account_id: String,
        amount: Integer,
        fulfillment_method: Increase::Models::CheckTransferCreateParams::fulfillment_method,
        source_account_number_id: String,
        ?physical_check: Increase::Models::CheckTransferCreateParams::PhysicalCheck,
        ?require_approval: bool,
        ?third_party: Increase::Models::CheckTransferCreateParams::ThirdParty,
        ?request_options: Increase::request_opts
      ) -> Increase::Models::CheckTransfer

      def retrieve: (
        String check_transfer_id,
        ?request_options: Increase::request_opts
      ) -> Increase::Models::CheckTransfer

      def list: (
        ?account_id: String,
        ?created_at: Increase::Models::CheckTransferListParams::CreatedAt,
        ?cursor: String,
        ?idempotency_key: String,
        ?limit: Integer,
        ?status: Increase::Models::CheckTransferListParams::Status,
        ?request_options: Increase::request_opts
      ) -> Increase::Internal::Page[Increase::Models::CheckTransfer]

      def approve: (
        String check_transfer_id,
        ?request_options: Increase::request_opts
      ) -> Increase::Models::CheckTransfer

      def cancel: (
        String check_transfer_id,
        ?request_options: Increase::request_opts
      ) -> Increase::Models::CheckTransfer

      def stop_payment: (
        String check_transfer_id,
        ?reason: Increase::Models::CheckTransferStopPaymentParams::reason,
        ?request_options: Increase::request_opts
      ) -> Increase::Models::CheckTransfer

      def initialize: (client: Increase::Client) -> void
    end
  end
end
