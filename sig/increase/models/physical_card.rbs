module Increase
  module Models
    type physical_card =
      {
        id: String,
        card_id: String,
        cardholder: Increase::PhysicalCard::Cardholder,
        created_at: Time,
        idempotency_key: String?,
        physical_card_profile_id: String?,
        shipment: Increase::PhysicalCard::Shipment,
        status: Increase::PhysicalCard::status,
        type: Increase::PhysicalCard::type_
      }

    class PhysicalCard < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor card_id: String

      attr_accessor cardholder: Increase::PhysicalCard::Cardholder

      attr_accessor created_at: Time

      attr_accessor idempotency_key: String?

      attr_accessor physical_card_profile_id: String?

      attr_accessor shipment: Increase::PhysicalCard::Shipment

      attr_accessor status: Increase::PhysicalCard::status

      attr_accessor type: Increase::PhysicalCard::type_

      def initialize: (
        id: String,
        card_id: String,
        cardholder: Increase::PhysicalCard::Cardholder,
        created_at: Time,
        idempotency_key: String?,
        physical_card_profile_id: String?,
        shipment: Increase::PhysicalCard::Shipment,
        status: Increase::PhysicalCard::status,
        type: Increase::PhysicalCard::type_
      ) -> void

      type cardholder = { first_name: String, last_name: String }

      class Cardholder < Increase::Internal::Type::BaseModel
        attr_accessor first_name: String

        attr_accessor last_name: String

        def initialize: (first_name: String, last_name: String) -> void
      end

      type shipment =
        {
          address: Increase::PhysicalCard::Shipment::Address,
          method_: Increase::PhysicalCard::Shipment::method_,
          status: Increase::PhysicalCard::Shipment::status,
          tracking: Increase::PhysicalCard::Shipment::Tracking?
        }

      class Shipment < Increase::Internal::Type::BaseModel
        attr_accessor address: Increase::PhysicalCard::Shipment::Address

        attr_accessor method_: Increase::PhysicalCard::Shipment::method_

        attr_accessor status: Increase::PhysicalCard::Shipment::status

        attr_accessor tracking: Increase::PhysicalCard::Shipment::Tracking?

        def initialize: (
          address: Increase::PhysicalCard::Shipment::Address,
          method_: Increase::PhysicalCard::Shipment::method_,
          status: Increase::PhysicalCard::Shipment::status,
          tracking: Increase::PhysicalCard::Shipment::Tracking?
        ) -> void

        type address =
          {
            city: String,
            :line1 => String,
            :line2 => String?,
            :line3 => String?,
            name: String,
            postal_code: String,
            state: String
          }

        class Address < Increase::Internal::Type::BaseModel
          attr_accessor city: String

          attr_accessor line1: String

          attr_accessor line2: String?

          attr_accessor line3: String?

          attr_accessor name: String

          attr_accessor postal_code: String

          attr_accessor state: String

          def initialize: (
            city: String,
            line1: String,
            line2: String?,
            line3: String?,
            name: String,
            postal_code: String,
            state: String
          ) -> void
        end

        type method_ = :usps | :fedex_priority_overnight | :fedex_2_day

        module Method
          extend Increase::Internal::Type::Enum

          # USPS Post with tracking.
          USPS: :usps

          # FedEx Priority Overnight, no signature.
          FEDEX_PRIORITY_OVERNIGHT: :fedex_priority_overnight

          # FedEx 2-day.
          FEDEX_2_DAY: :fedex_2_day

          def self?.values: -> ::Array[Increase::PhysicalCard::Shipment::method_]
        end

        type status =
          :pending
          | :canceled
          | :submitted
          | :acknowledged
          | :rejected
          | :shipped
          | :returned

        module Status
          extend Increase::Internal::Type::Enum

          # The physical card has not yet been shipped.
          PENDING: :pending

          # The physical card shipment was canceled prior to submission.
          CANCELED: :canceled

          # The physical card shipment has been submitted to the card fulfillment provider.
          SUBMITTED: :submitted

          # The physical card shipment has been acknowledged by the card fulfillment provider and will be processed in their next batch.
          ACKNOWLEDGED: :acknowledged

          # The physical card shipment was rejected by the card printer due to an error.
          REJECTED: :rejected

          # The physical card has been shipped.
          SHIPPED: :shipped

          # The physical card shipment was returned to the sender and destroyed by the production facility.
          RETURNED: :returned

          def self?.values: -> ::Array[Increase::PhysicalCard::Shipment::status]
        end

        type tracking =
          {
            number: String,
            return_number: String?,
            return_reason: String?,
            shipped_at: Time,
            updates: ::Array[Increase::PhysicalCard::Shipment::Tracking::Update]
          }

        class Tracking < Increase::Internal::Type::BaseModel
          attr_accessor number: String

          attr_accessor return_number: String?

          attr_accessor return_reason: String?

          attr_accessor shipped_at: Time

          attr_accessor updates: ::Array[Increase::PhysicalCard::Shipment::Tracking::Update]

          def initialize: (
            number: String,
            return_number: String?,
            return_reason: String?,
            shipped_at: Time,
            updates: ::Array[Increase::PhysicalCard::Shipment::Tracking::Update]
          ) -> void

          type update =
            {
              carrier_estimated_delivery_at: Time?,
              category: Increase::PhysicalCard::Shipment::Tracking::Update::category,
              city: String?,
              created_at: Time,
              postal_code: String?,
              state: String?
            }

          class Update < Increase::Internal::Type::BaseModel
            attr_accessor carrier_estimated_delivery_at: Time?

            attr_accessor category: Increase::PhysicalCard::Shipment::Tracking::Update::category

            attr_accessor city: String?

            attr_accessor created_at: Time

            attr_accessor postal_code: String?

            attr_accessor state: String?

            def initialize: (
              carrier_estimated_delivery_at: Time?,
              category: Increase::PhysicalCard::Shipment::Tracking::Update::category,
              city: String?,
              created_at: Time,
              postal_code: String?,
              state: String?
            ) -> void

            type category =
              :in_transit
              | :processed_for_delivery
              | :delivered
              | :returned_to_sender

            module Category
              extend Increase::Internal::Type::Enum

              # The physical card is in transit.
              IN_TRANSIT: :in_transit

              # The physical card has been processed for delivery.
              PROCESSED_FOR_DELIVERY: :processed_for_delivery

              # The physical card has been delivered.
              DELIVERED: :delivered

              # Delivery failed and the physical card was returned to sender.
              RETURNED_TO_SENDER: :returned_to_sender

              def self?.values: -> ::Array[Increase::PhysicalCard::Shipment::Tracking::Update::category]
            end
          end
        end
      end

      type status = :active | :disabled | :canceled

      module Status
        extend Increase::Internal::Type::Enum

        # The physical card is active.
        ACTIVE: :active

        # The physical card is temporarily disabled.
        DISABLED: :disabled

        # The physical card is permanently canceled.
        CANCELED: :canceled

        def self?.values: -> ::Array[Increase::PhysicalCard::status]
      end

      type type_ = :physical_card

      module Type
        extend Increase::Internal::Type::Enum

        PHYSICAL_CARD: :physical_card

        def self?.values: -> ::Array[Increase::PhysicalCard::type_]
      end
    end
  end
end
