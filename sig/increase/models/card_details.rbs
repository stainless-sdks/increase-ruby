module Increase
  module Models
    type card_details = {
      card_id: String,
      expiration_month: Integer,
      expiration_year: Integer,
      pin: String,
      primary_account_number: String,
      type: Increase::Models::CardDetails::type_,
      verification_code: String
    }

    class CardDetails < Increase::Internal::Type::BaseModel
      attr_accessor card_id: String

      attr_accessor expiration_month: Integer

      attr_accessor expiration_year: Integer

      attr_accessor pin: String

      attr_accessor primary_account_number: String

      attr_accessor type: Increase::Models::CardDetails::type_

      attr_accessor verification_code: String

      def initialize: (card_id: String, expiration_month: Integer, expiration_year: Integer, pin: String, primary_account_number: String, type: Increase::Models::CardDetails::type_, verification_code: String) -> void

      def to_hash: () -> {
        card_id: String,
        expiration_month: Integer,
        expiration_year: Integer,
        pin: String,
        primary_account_number: String,
        type: Increase::Models::CardDetails::type_,
        verification_code: String
      }

      type type_ = :card_details

      module Type
        extend Increase::Internal::Type::Enum

        CARD_DETAILS: :card_details

        def self?.values: () -> ::Array[Increase::Models::CardDetails::type_]
      end
    end
  end
end
