module Increase
  module Models
    type digital_card_profile = {
      id: String,
      app_icon_file_id: String,
      background_image_file_id: String,
      card_description: String,
      contact_email: String?,
      contact_phone: String?,
      contact_website: String?,
      created_at: Time,
      description: String,
      idempotency_key: String?,
      issuer_name: String,
      status: Increase::Models::DigitalCardProfile::status,
      text_color: Increase::DigitalCardProfile::TextColor,
      type: Increase::Models::DigitalCardProfile::type_
    }

    class DigitalCardProfile < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor app_icon_file_id: String

      attr_accessor background_image_file_id: String

      attr_accessor card_description: String

      attr_accessor contact_email: String?

      attr_accessor contact_phone: String?

      attr_accessor contact_website: String?

      attr_accessor created_at: Time

      attr_accessor description: String

      attr_accessor idempotency_key: String?

      attr_accessor issuer_name: String

      attr_accessor status: Increase::Models::DigitalCardProfile::status

      attr_accessor text_color: Increase::DigitalCardProfile::TextColor

      attr_accessor type: Increase::Models::DigitalCardProfile::type_

      def initialize: (id: String, app_icon_file_id: String, background_image_file_id: String, card_description: String, contact_email: String?, contact_phone: String?, contact_website: String?, created_at: Time, description: String, idempotency_key: String?, issuer_name: String, status: Increase::Models::DigitalCardProfile::status, text_color: Increase::DigitalCardProfile::TextColor, type: Increase::Models::DigitalCardProfile::type_) -> void

      def to_hash: () -> {
        id: String,
        app_icon_file_id: String,
        background_image_file_id: String,
        card_description: String,
        contact_email: String?,
        contact_phone: String?,
        contact_website: String?,
        created_at: Time,
        description: String,
        idempotency_key: String?,
        issuer_name: String,
        status: Increase::Models::DigitalCardProfile::status,
        text_color: Increase::DigitalCardProfile::TextColor,
        type: Increase::Models::DigitalCardProfile::type_
      }

      type status = (:pending | :rejected | :active | :archived)

      module Status
        extend Increase::Internal::Type::Enum

        # The Card Profile is awaiting review from Increase and/or processing by card networks.
        PENDING: :pending

        # There is an issue with the Card Profile preventing it from use.
        REJECTED: :rejected

        # The Card Profile can be assigned to Cards.
        ACTIVE: :active

        # The Card Profile is no longer in use.
        ARCHIVED: :archived

        def self?.values: () -> ::Array[Increase::Models::DigitalCardProfile::status]
      end

      type text_color = {blue: Integer, green: Integer, red: Integer}

      class TextColor < Increase::Internal::Type::BaseModel
        attr_accessor blue: Integer

        attr_accessor green: Integer

        attr_accessor red: Integer

        def initialize: (blue: Integer, green: Integer, red: Integer) -> void

        def to_hash: () -> {blue: Integer, green: Integer, red: Integer}
      end

      type type_ = :digital_card_profile

      module Type
        extend Increase::Internal::Type::Enum

        DIGITAL_CARD_PROFILE: :digital_card_profile

        def self?.values: () -> ::Array[Increase::Models::DigitalCardProfile::type_]
      end
    end
  end
end
