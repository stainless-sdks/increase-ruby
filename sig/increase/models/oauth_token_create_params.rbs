module Increase
  module Models
    type oauth_token_create_params = ({
      grant_type: Increase::Models::OAuthTokenCreateParams::grant_type,
      client_id: String,
      client_secret: String,
      code: String,
      production_token: String
    } & Increase::request_parameters)

    class OAuthTokenCreateParams < Increase::BaseModel
      extend Increase::RequestParameters::Converter
      include Increase::RequestParameters

      attr_accessor grant_type: Increase::Models::OAuthTokenCreateParams::grant_type

      attr_reader client_id: String?

      def client_id=: (String) -> String

      attr_reader client_secret: String?

      def client_secret=: (String) -> String

      attr_reader code: String?

      def code=: (String) -> String

      attr_reader production_token: String?

      def production_token=: (String) -> String

      def initialize: (grant_type: Increase::Models::OAuthTokenCreateParams::grant_type, client_id: String, client_secret: String, code: String, production_token: String, request_options: Increase::request_opts) -> void
                    | (?(Increase::Models::oauth_token_create_params | Increase::BaseModel) data) -> void

      def to_hash: () -> Increase::Models::oauth_token_create_params

      type grant_type = (:authorization_code | :production_token)

      class GrantType < Increase::Enum
        # An OAuth authorization code.
        AUTHORIZATION_CODE: :authorization_code

        # An OAuth production token.
        PRODUCTION_TOKEN: :production_token

        def self.values: () -> ::Array[Increase::Models::OAuthTokenCreateParams::grant_type]
      end
    end
  end
end
