module Increase
  module Models
    type card_update_params =
      {
        billing_address: Increase::Models::CardUpdateParams::BillingAddress,
        description: String,
        digital_wallet: Increase::Models::CardUpdateParams::DigitalWallet,
        entity_id: String,
        status: Increase::Models::CardUpdateParams::status
      }
      & Increase::request_parameters

    class CardUpdateParams < Increase::BaseModel
      extend Increase::Type::RequestParameters::Converter
      include Increase::RequestParameters

      attr_reader billing_address: Increase::Models::CardUpdateParams::BillingAddress?

      def billing_address=: (
        Increase::Models::CardUpdateParams::BillingAddress
      ) -> Increase::Models::CardUpdateParams::BillingAddress

      attr_reader description: String?

      def description=: (String) -> String

      attr_reader digital_wallet: Increase::Models::CardUpdateParams::DigitalWallet?

      def digital_wallet=: (
        Increase::Models::CardUpdateParams::DigitalWallet
      ) -> Increase::Models::CardUpdateParams::DigitalWallet

      attr_reader entity_id: String?

      def entity_id=: (String) -> String

      attr_reader status: Increase::Models::CardUpdateParams::status?

      def status=: (
        Increase::Models::CardUpdateParams::status
      ) -> Increase::Models::CardUpdateParams::status

      def initialize: (
        ?billing_address: Increase::Models::CardUpdateParams::BillingAddress,
        ?description: String,
        ?digital_wallet: Increase::Models::CardUpdateParams::DigitalWallet,
        ?entity_id: String,
        ?status: Increase::Models::CardUpdateParams::status,
        ?request_options: Increase::request_opts
      ) -> void

      def to_hash: -> Increase::Models::card_update_params

      type billing_address =
        {
          city: String,
          :line1 => String,
          postal_code: String,
          state: String,
          :line2 => String
        }

      class BillingAddress < Increase::BaseModel
        attr_accessor city: String

        attr_accessor line1: String

        attr_accessor postal_code: String

        attr_accessor state: String

        attr_reader line2: String?

        def line2=: (String) -> String

        def initialize: (
          city: String,
          line1: String,
          postal_code: String,
          state: String,
          ?line2: String
        ) -> void

        def to_hash: -> Increase::Models::CardUpdateParams::billing_address
      end

      type digital_wallet =
        { digital_card_profile_id: String, email: String, phone: String }

      class DigitalWallet < Increase::BaseModel
        attr_reader digital_card_profile_id: String?

        def digital_card_profile_id=: (String) -> String

        attr_reader email: String?

        def email=: (String) -> String

        attr_reader phone: String?

        def phone=: (String) -> String

        def initialize: (
          ?digital_card_profile_id: String,
          ?email: String,
          ?phone: String
        ) -> void

        def to_hash: -> Increase::Models::CardUpdateParams::digital_wallet
      end

      type status = :active | :disabled | :canceled

      module Status
        extend Increase::Enum

        # The card is active.
        ACTIVE: :active

        # The card is temporarily disabled.
        DISABLED: :disabled

        # The card is permanently canceled.
        CANCELED: :canceled

        def self?.values: -> ::Array[Increase::Models::CardUpdateParams::status]
      end
    end
  end
end
