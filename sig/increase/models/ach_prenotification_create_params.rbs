module Increase
  module Models
    type ach_prenotification_create_params =
      {
        account_id: String,
        account_number: String,
        routing_number: String,
        addendum: String,
        company_descriptive_date: String,
        company_discretionary_data: String,
        company_entry_description: String,
        company_name: String,
        credit_debit_indicator: Increase::Models::ACHPrenotificationCreateParams::credit_debit_indicator,
        effective_date: Date,
        individual_id: String,
        individual_name: String,
        standard_entry_class_code: Increase::Models::ACHPrenotificationCreateParams::standard_entry_class_code
      }
      & Increase::Internal::Type::request_parameters

    class ACHPrenotificationCreateParams < Increase::Internal::Type::BaseModel
      extend Increase::Internal::Type::RequestParameters::Converter
      include Increase::Internal::Type::RequestParameters

      attr_accessor account_id: String

      attr_accessor account_number: String

      attr_accessor routing_number: String

      attr_reader addendum: String?

      def addendum=: (String) -> String

      attr_reader company_descriptive_date: String?

      def company_descriptive_date=: (String) -> String

      attr_reader company_discretionary_data: String?

      def company_discretionary_data=: (String) -> String

      attr_reader company_entry_description: String?

      def company_entry_description=: (String) -> String

      attr_reader company_name: String?

      def company_name=: (String) -> String

      attr_reader credit_debit_indicator: Increase::Models::ACHPrenotificationCreateParams::credit_debit_indicator?

      def credit_debit_indicator=: (
        Increase::Models::ACHPrenotificationCreateParams::credit_debit_indicator
      ) -> Increase::Models::ACHPrenotificationCreateParams::credit_debit_indicator

      attr_reader effective_date: Date?

      def effective_date=: (Date) -> Date

      attr_reader individual_id: String?

      def individual_id=: (String) -> String

      attr_reader individual_name: String?

      def individual_name=: (String) -> String

      attr_reader standard_entry_class_code: Increase::Models::ACHPrenotificationCreateParams::standard_entry_class_code?

      def standard_entry_class_code=: (
        Increase::Models::ACHPrenotificationCreateParams::standard_entry_class_code
      ) -> Increase::Models::ACHPrenotificationCreateParams::standard_entry_class_code

      def initialize: (
        account_id: String,
        account_number: String,
        routing_number: String,
        ?addendum: String,
        ?company_descriptive_date: String,
        ?company_discretionary_data: String,
        ?company_entry_description: String,
        ?company_name: String,
        ?credit_debit_indicator: Increase::Models::ACHPrenotificationCreateParams::credit_debit_indicator,
        ?effective_date: Date,
        ?individual_id: String,
        ?individual_name: String,
        ?standard_entry_class_code: Increase::Models::ACHPrenotificationCreateParams::standard_entry_class_code,
        ?request_options: Increase::request_opts
      ) -> void

      def to_hash: -> {
        account_id: String,
        account_number: String,
        routing_number: String,
        addendum: String,
        company_descriptive_date: String,
        company_discretionary_data: String,
        company_entry_description: String,
        company_name: String,
        credit_debit_indicator: Increase::Models::ACHPrenotificationCreateParams::credit_debit_indicator,
        effective_date: Date,
        individual_id: String,
        individual_name: String,
        standard_entry_class_code: Increase::Models::ACHPrenotificationCreateParams::standard_entry_class_code,
        request_options: Increase::RequestOptions
      }

      type credit_debit_indicator = :credit | :debit

      module CreditDebitIndicator
        extend Increase::Internal::Type::Enum

        # The Prenotification is for an anticipated credit.
        CREDIT: :credit

        # The Prenotification is for an anticipated debit.
        DEBIT: :debit

        def self?.values: -> ::Array[Increase::Models::ACHPrenotificationCreateParams::credit_debit_indicator]
      end

      type standard_entry_class_code =
        :corporate_credit_or_debit
        | :corporate_trade_exchange
        | :prearranged_payments_and_deposit
        | :internet_initiated

      module StandardEntryClassCode
        extend Increase::Internal::Type::Enum

        # Corporate Credit and Debit (CCD).
        CORPORATE_CREDIT_OR_DEBIT: :corporate_credit_or_debit

        # Corporate Trade Exchange (CTX).
        CORPORATE_TRADE_EXCHANGE: :corporate_trade_exchange

        # Prearranged Payments and Deposits (PPD).
        PREARRANGED_PAYMENTS_AND_DEPOSIT: :prearranged_payments_and_deposit

        # Internet Initiated (WEB).
        INTERNET_INITIATED: :internet_initiated

        def self?.values: -> ::Array[Increase::Models::ACHPrenotificationCreateParams::standard_entry_class_code]
      end
    end
  end
end
