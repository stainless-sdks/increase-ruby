module Increase
  module Models
    type account_statement_list_params =
      {
        account_id: String,
        cursor: String,
        limit: Integer,
        statement_period_start: Increase::Models::AccountStatementListParams::StatementPeriodStart
      }
      & Increase::request_parameters

    class AccountStatementListParams < Increase::BaseModel
      extend Increase::RequestParameters::Converter
      include Increase::RequestParameters

      attr_reader account_id: String?

      def account_id=: (String) -> String

      attr_reader cursor: String?

      def cursor=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader statement_period_start: Increase::Models::AccountStatementListParams::StatementPeriodStart?

      def statement_period_start=: (
        Increase::Models::AccountStatementListParams::StatementPeriodStart
      ) -> Increase::Models::AccountStatementListParams::StatementPeriodStart

      def initialize: (
        ?account_id: String,
        ?cursor: String,
        ?limit: Integer,
        ?statement_period_start: Increase::Models::AccountStatementListParams::StatementPeriodStart,
        ?request_options: Increase::request_opts
      ) -> void

      def to_hash: -> Increase::Models::account_statement_list_params

      type statement_period_start =
        { after: Time, before: Time, on_or_after: Time, on_or_before: Time }

      class StatementPeriodStart < Increase::BaseModel
        attr_reader after: Time?

        def after=: (Time) -> Time

        attr_reader before: Time?

        def before=: (Time) -> Time

        attr_reader on_or_after: Time?

        def on_or_after=: (Time) -> Time

        attr_reader on_or_before: Time?

        def on_or_before=: (Time) -> Time

        def initialize: (
          ?after: Time,
          ?before: Time,
          ?on_or_after: Time,
          ?on_or_before: Time
        ) -> void

        def to_hash: -> Increase::Models::AccountStatementListParams::statement_period_start
      end
    end
  end
end
