module Increase
  module Models
    type card_purchase_supplement =
      {
        id: String,
        card_payment_id: String?,
        invoice: Increase::Models::CardPurchaseSupplement::Invoice?,
        line_items: ::Array[Increase::Models::CardPurchaseSupplement::LineItem]?,
        transaction_id: String,
        type: Increase::Models::CardPurchaseSupplement::type_
      }

    class CardPurchaseSupplement < Increase::BaseModel
      attr_accessor id: String

      attr_accessor card_payment_id: String?

      attr_accessor invoice: Increase::Models::CardPurchaseSupplement::Invoice?

      attr_accessor line_items: ::Array[Increase::Models::CardPurchaseSupplement::LineItem]?

      attr_accessor transaction_id: String

      attr_accessor type: Increase::Models::CardPurchaseSupplement::type_

      def initialize: (
        id: String,
        card_payment_id: String?,
        invoice: Increase::Models::CardPurchaseSupplement::Invoice?,
        line_items: ::Array[Increase::Models::CardPurchaseSupplement::LineItem]?,
        transaction_id: String,
        type: Increase::Models::CardPurchaseSupplement::type_
      ) -> void

      def to_hash: -> Increase::Models::card_purchase_supplement

      type invoice =
        {
          discount_amount: Integer?,
          discount_currency: String?,
          discount_treatment_code: Increase::Models::CardPurchaseSupplement::Invoice::discount_treatment_code?,
          duty_tax_amount: Integer?,
          duty_tax_currency: String?,
          order_date: Date?,
          shipping_amount: Integer?,
          shipping_currency: String?,
          shipping_destination_country_code: String?,
          shipping_destination_postal_code: String?,
          shipping_source_postal_code: String?,
          shipping_tax_amount: Integer?,
          shipping_tax_currency: String?,
          shipping_tax_rate: String?,
          tax_treatments: Increase::Models::CardPurchaseSupplement::Invoice::tax_treatments?,
          unique_value_added_tax_invoice_reference: String?
        }

      class Invoice < Increase::BaseModel
        attr_accessor discount_amount: Integer?

        attr_accessor discount_currency: String?

        attr_accessor discount_treatment_code: Increase::Models::CardPurchaseSupplement::Invoice::discount_treatment_code?

        attr_accessor duty_tax_amount: Integer?

        attr_accessor duty_tax_currency: String?

        attr_accessor order_date: Date?

        attr_accessor shipping_amount: Integer?

        attr_accessor shipping_currency: String?

        attr_accessor shipping_destination_country_code: String?

        attr_accessor shipping_destination_postal_code: String?

        attr_accessor shipping_source_postal_code: String?

        attr_accessor shipping_tax_amount: Integer?

        attr_accessor shipping_tax_currency: String?

        attr_accessor shipping_tax_rate: String?

        attr_accessor tax_treatments: Increase::Models::CardPurchaseSupplement::Invoice::tax_treatments?

        attr_accessor unique_value_added_tax_invoice_reference: String?

        def initialize: (
          discount_amount: Integer?,
          discount_currency: String?,
          discount_treatment_code: Increase::Models::CardPurchaseSupplement::Invoice::discount_treatment_code?,
          duty_tax_amount: Integer?,
          duty_tax_currency: String?,
          order_date: Date?,
          shipping_amount: Integer?,
          shipping_currency: String?,
          shipping_destination_country_code: String?,
          shipping_destination_postal_code: String?,
          shipping_source_postal_code: String?,
          shipping_tax_amount: Integer?,
          shipping_tax_currency: String?,
          shipping_tax_rate: String?,
          tax_treatments: Increase::Models::CardPurchaseSupplement::Invoice::tax_treatments?,
          unique_value_added_tax_invoice_reference: String?
        ) -> void

        def to_hash: -> Increase::Models::CardPurchaseSupplement::invoice

        type discount_treatment_code =
          :no_invoice_level_discount_provided
          | :tax_calculated_on_post_discount_invoice_total
          | :tax_calculated_on_pre_discount_invoice_total

        class DiscountTreatmentCode < Increase::Enum
          # No invoice level discount provided
          NO_INVOICE_LEVEL_DISCOUNT_PROVIDED: :no_invoice_level_discount_provided

          # Tax calculated on post discount invoice total
          TAX_CALCULATED_ON_POST_DISCOUNT_INVOICE_TOTAL: :tax_calculated_on_post_discount_invoice_total

          # Tax calculated on pre discount invoice total
          TAX_CALCULATED_ON_PRE_DISCOUNT_INVOICE_TOTAL: :tax_calculated_on_pre_discount_invoice_total

          def self.values: -> ::Array[Increase::Models::CardPurchaseSupplement::Invoice::discount_treatment_code]
        end

        type tax_treatments =
          :no_tax_applies
          | :net_price_line_item_level
          | :net_price_invoice_level
          | :gross_price_line_item_level
          | :gross_price_invoice_level

        class TaxTreatments < Increase::Enum
          # No tax applies
          NO_TAX_APPLIES: :no_tax_applies

          # Net price line item level
          NET_PRICE_LINE_ITEM_LEVEL: :net_price_line_item_level

          # Net price invoice level
          NET_PRICE_INVOICE_LEVEL: :net_price_invoice_level

          # Gross price line item level
          GROSS_PRICE_LINE_ITEM_LEVEL: :gross_price_line_item_level

          # Gross price invoice level
          GROSS_PRICE_INVOICE_LEVEL: :gross_price_invoice_level

          def self.values: -> ::Array[Increase::Models::CardPurchaseSupplement::Invoice::tax_treatments]
        end
      end

      type line_item =
        {
          id: String,
          detail_indicator: Increase::Models::CardPurchaseSupplement::LineItem::detail_indicator?,
          discount_amount: Integer?,
          discount_currency: String?,
          discount_treatment_code: Increase::Models::CardPurchaseSupplement::LineItem::discount_treatment_code?,
          item_commodity_code: String?,
          item_descriptor: String?,
          item_quantity: String?,
          product_code: String?,
          sales_tax_amount: Integer?,
          sales_tax_currency: String?,
          sales_tax_rate: String?,
          total_amount: Integer?,
          total_amount_currency: String?,
          unit_cost: String?,
          unit_cost_currency: String?,
          unit_of_measure_code: String?
        }

      class LineItem < Increase::BaseModel
        attr_accessor id: String

        attr_accessor detail_indicator: Increase::Models::CardPurchaseSupplement::LineItem::detail_indicator?

        attr_accessor discount_amount: Integer?

        attr_accessor discount_currency: String?

        attr_accessor discount_treatment_code: Increase::Models::CardPurchaseSupplement::LineItem::discount_treatment_code?

        attr_accessor item_commodity_code: String?

        attr_accessor item_descriptor: String?

        attr_accessor item_quantity: String?

        attr_accessor product_code: String?

        attr_accessor sales_tax_amount: Integer?

        attr_accessor sales_tax_currency: String?

        attr_accessor sales_tax_rate: String?

        attr_accessor total_amount: Integer?

        attr_accessor total_amount_currency: String?

        attr_accessor unit_cost: String?

        attr_accessor unit_cost_currency: String?

        attr_accessor unit_of_measure_code: String?

        def initialize: (
          id: String,
          detail_indicator: Increase::Models::CardPurchaseSupplement::LineItem::detail_indicator?,
          discount_amount: Integer?,
          discount_currency: String?,
          discount_treatment_code: Increase::Models::CardPurchaseSupplement::LineItem::discount_treatment_code?,
          item_commodity_code: String?,
          item_descriptor: String?,
          item_quantity: String?,
          product_code: String?,
          sales_tax_amount: Integer?,
          sales_tax_currency: String?,
          sales_tax_rate: String?,
          total_amount: Integer?,
          total_amount_currency: String?,
          unit_cost: String?,
          unit_cost_currency: String?,
          unit_of_measure_code: String?
        ) -> void

        def to_hash: -> Increase::Models::CardPurchaseSupplement::line_item

        type detail_indicator = :normal | :credit | :payment

        class DetailIndicator < Increase::Enum
          # Normal
          NORMAL: :normal

          # Credit
          CREDIT: :credit

          # Purchase
          PAYMENT: :payment

          def self.values: -> ::Array[Increase::Models::CardPurchaseSupplement::LineItem::detail_indicator]
        end

        type discount_treatment_code =
          :no_line_item_level_discount_provided
          | :tax_calculated_on_post_discount_line_item_total
          | :tax_calculated_on_pre_discount_line_item_total

        class DiscountTreatmentCode < Increase::Enum
          # No line item level discount provided
          NO_LINE_ITEM_LEVEL_DISCOUNT_PROVIDED: :no_line_item_level_discount_provided

          # Tax calculated on post discount line item total
          TAX_CALCULATED_ON_POST_DISCOUNT_LINE_ITEM_TOTAL: :tax_calculated_on_post_discount_line_item_total

          # Tax calculated on pre discount line item total
          TAX_CALCULATED_ON_PRE_DISCOUNT_LINE_ITEM_TOTAL: :tax_calculated_on_pre_discount_line_item_total

          def self.values: -> ::Array[Increase::Models::CardPurchaseSupplement::LineItem::discount_treatment_code]
        end
      end

      type type_ = :card_purchase_supplement

      class Type < Increase::Enum
        CARD_PURCHASE_SUPPLEMENT: :card_purchase_supplement

        def self.values: -> ::Array[Increase::Models::CardPurchaseSupplement::type_]
      end
    end
  end
end
