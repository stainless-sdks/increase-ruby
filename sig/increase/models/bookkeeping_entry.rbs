module Increase
  module Models
    type bookkeeping_entry =
      {
        id: String,
        account_id: String,
        amount: Integer,
        created_at: Time,
        entry_set_id: String,
        type: Increase::BookkeepingEntry::type_
      }

    class BookkeepingEntry < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor account_id: String

      attr_accessor amount: Integer

      attr_accessor created_at: Time

      attr_accessor entry_set_id: String

      attr_accessor type: Increase::BookkeepingEntry::type_

      def initialize: (
        id: String,
        account_id: String,
        amount: Integer,
        created_at: Time,
        entry_set_id: String,
        type: Increase::BookkeepingEntry::type_
      ) -> void

      def to_hash: -> ::Hash[Symbol, top]

      type type_ = :bookkeeping_entry

      module Type
        extend Increase::Internal::Type::Enum

        BOOKKEEPING_ENTRY: :bookkeeping_entry

        def self?.values: -> ::Array[Increase::BookkeepingEntry::type_]
      end
    end
  end
end
