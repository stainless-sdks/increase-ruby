module Increase
  module Models
    type bookkeeping_entry = {
      id: String,
      account_id: String,
      amount: Integer,
      created_at: Time,
      entry_set_id: String,
      type: Increase::Models::BookkeepingEntry::type_
    }

    class BookkeepingEntry < Increase::BaseModel
      attr_accessor id: String

      attr_accessor account_id: String

      attr_accessor amount: Integer

      attr_accessor created_at: Time

      attr_accessor entry_set_id: String

      attr_accessor type: Increase::Models::BookkeepingEntry::type_

      def initialize: (id: String, account_id: String, amount: Integer, created_at: Time, entry_set_id: String, type: Increase::Models::BookkeepingEntry::type_) -> void
                    | (?(Increase::Models::bookkeeping_entry | Increase::BaseModel) data) -> void

      def to_hash: () -> Increase::Models::bookkeeping_entry

      type type_ = :bookkeeping_entry

      class Type < Increase::Enum
        BOOKKEEPING_ENTRY: :bookkeeping_entry

        def self.values: () -> ::Array[Increase::Models::BookkeepingEntry::type_]
      end
    end
  end
end
