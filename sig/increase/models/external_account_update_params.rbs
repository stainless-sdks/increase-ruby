module Increase
  module Models
    type external_account_update_params =
      {
        account_holder: Increase::Models::ExternalAccountUpdateParams::account_holder,
        description: String,
        funding: Increase::Models::ExternalAccountUpdateParams::funding,
        status: Increase::Models::ExternalAccountUpdateParams::status
      }
      & Increase::Internal::Type::request_parameters

    class ExternalAccountUpdateParams < Increase::BaseModel
      extend Increase::Internal::Type::RequestParameters::Converter
      include Increase::Internal::Type::RequestParameters

      attr_reader account_holder: Increase::Models::ExternalAccountUpdateParams::account_holder?

      def account_holder=: (
        Increase::Models::ExternalAccountUpdateParams::account_holder
      ) -> Increase::Models::ExternalAccountUpdateParams::account_holder

      attr_reader description: String?

      def description=: (String) -> String

      attr_reader funding: Increase::Models::ExternalAccountUpdateParams::funding?

      def funding=: (
        Increase::Models::ExternalAccountUpdateParams::funding
      ) -> Increase::Models::ExternalAccountUpdateParams::funding

      attr_reader status: Increase::Models::ExternalAccountUpdateParams::status?

      def status=: (
        Increase::Models::ExternalAccountUpdateParams::status
      ) -> Increase::Models::ExternalAccountUpdateParams::status

      def initialize: (
        ?account_holder: Increase::Models::ExternalAccountUpdateParams::account_holder,
        ?description: String,
        ?funding: Increase::Models::ExternalAccountUpdateParams::funding,
        ?status: Increase::Models::ExternalAccountUpdateParams::status,
        ?request_options: Increase::request_opts
      ) -> void

      def to_hash: -> Increase::Models::external_account_update_params

      type account_holder = :business | :individual

      module AccountHolder
        extend Increase::Enum

        # The External Account is owned by a business.
        BUSINESS: :business

        # The External Account is owned by an individual.
        INDIVIDUAL: :individual

        def self?.values: -> ::Array[Increase::Models::ExternalAccountUpdateParams::account_holder]
      end

      type funding = :checking | :savings | :other

      module Funding
        extend Increase::Enum

        # A checking account.
        CHECKING: :checking

        # A savings account.
        SAVINGS: :savings

        # A different type of account.
        OTHER: :other

        def self?.values: -> ::Array[Increase::Models::ExternalAccountUpdateParams::funding]
      end

      type status = :active | :archived

      module Status
        extend Increase::Enum

        # The External Account is active.
        ACTIVE: :active

        # The External Account is archived and won't appear in the dashboard.
        ARCHIVED: :archived

        def self?.values: -> ::Array[Increase::Models::ExternalAccountUpdateParams::status]
      end
    end
  end
end
