module Increase
  module Models
    type oauth_application = {
      id: String,
      client_id: String,
      created_at: Time,
      deleted_at: Time?,
      name: String?,
      status: Increase::Models::OAuthApplication::status,
      type: Increase::Models::OAuthApplication::type_
    }

    class OAuthApplication < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor client_id: String

      attr_accessor created_at: Time

      attr_accessor deleted_at: Time?

      attr_accessor name: String?

      attr_accessor status: Increase::Models::OAuthApplication::status

      attr_accessor type: Increase::Models::OAuthApplication::type_

      def initialize: (id: String, client_id: String, created_at: Time, deleted_at: Time?, name: String?, status: Increase::Models::OAuthApplication::status, type: Increase::Models::OAuthApplication::type_) -> void

      def to_hash: () -> {
        id: String,
        client_id: String,
        created_at: Time,
        deleted_at: Time?,
        name: String?,
        status: Increase::Models::OAuthApplication::status,
        type: Increase::Models::OAuthApplication::type_
      }

      type status = (:active | :deleted)

      module Status
        extend Increase::Internal::Type::Enum

        # The application is active and can be used by your users.
        ACTIVE: :active

        # The application is deleted.
        DELETED: :deleted

        def self?.values: () -> ::Array[Increase::Models::OAuthApplication::status]
      end

      type type_ = :oauth_application

      module Type
        extend Increase::Internal::Type::Enum

        OAUTH_APPLICATION: :oauth_application

        def self?.values: () -> ::Array[Increase::Models::OAuthApplication::type_]
      end
    end
  end
end
