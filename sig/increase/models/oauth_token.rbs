module Increase
  module Models
    type oauth_token =
      {
        access_token: String,
        token_type: Increase::Models::OAuthToken::token_type,
        type: Increase::Models::OAuthToken::type_
      }

    class OAuthToken < Increase::Internal::Type::BaseModel
      attr_accessor access_token: String

      attr_accessor token_type: Increase::Models::OAuthToken::token_type

      attr_accessor type: Increase::Models::OAuthToken::type_

      def initialize: (
        access_token: String,
        token_type: Increase::Models::OAuthToken::token_type,
        type: Increase::Models::OAuthToken::type_
      ) -> void

      def to_hash: -> Increase::Models::oauth_token

      type token_type = :bearer

      module TokenType
        extend Increase::Internal::Type::Enum

        BEARER: :bearer

        def self?.values: -> ::Array[Increase::Models::OAuthToken::token_type]
      end

      type type_ = :oauth_token

      module Type
        extend Increase::Internal::Type::Enum

        OAUTH_TOKEN: :oauth_token

        def self?.values: -> ::Array[Increase::Models::OAuthToken::type_]
      end
    end
  end
end
