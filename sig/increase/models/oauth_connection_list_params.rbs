module Increase
  module Models
    type oauth_connection_list_params =
      {
        cursor: String,
        limit: Integer,
        oauth_application_id: String,
        status: Increase::Models::OAuthConnectionListParams::Status
      }
      & Increase::request_parameters

    class OAuthConnectionListParams < Increase::BaseModel
      extend Increase::RequestParameters::Converter
      include Increase::RequestParameters

      attr_reader cursor: String?

      def cursor=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader oauth_application_id: String?

      def oauth_application_id=: (String) -> String

      attr_reader status: Increase::Models::OAuthConnectionListParams::Status?

      def status=: (
        Increase::Models::OAuthConnectionListParams::Status
      ) -> Increase::Models::OAuthConnectionListParams::Status

      def initialize:
        (
          cursor: String,
          limit: Integer,
          oauth_application_id: String,
          status: Increase::Models::OAuthConnectionListParams::Status,
          request_options: Increase::request_opts
        ) -> void
        | (
          ?Increase::Models::oauth_connection_list_params
          | Increase::BaseModel data
        ) -> void

      def to_hash: -> Increase::Models::oauth_connection_list_params

      type status =
        {
          in_: ::Array[Increase::Models::OAuthConnectionListParams::Status::in_]
        }

      class Status < Increase::BaseModel
        attr_reader in_: ::Array[Increase::Models::OAuthConnectionListParams::Status::in_]?

        def in_=: (
          ::Array[Increase::Models::OAuthConnectionListParams::Status::in_]
        ) -> ::Array[Increase::Models::OAuthConnectionListParams::Status::in_]

        def initialize:
          (
            in_: ::Array[Increase::Models::OAuthConnectionListParams::Status::in_]
          ) -> void
          | (
            ?Increase::Models::OAuthConnectionListParams::status
            | Increase::BaseModel data
          ) -> void

        def to_hash: -> Increase::Models::OAuthConnectionListParams::status

        type in_ = :active | :inactive

        class In < Increase::Enum
          # The OAuth connection is active.
          ACTIVE: :active

          # The OAuth connection is permanently deactivated.
          INACTIVE: :inactive

          def self.values: -> ::Array[Increase::Models::OAuthConnectionListParams::Status::in_]
        end
      end
    end
  end
end
