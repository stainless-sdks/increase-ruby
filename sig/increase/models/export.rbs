module Increase
  module Models
    type export =
      {
        id: String,
        category: Increase::Export::category,
        created_at: Time,
        file_download_url: String?,
        file_id: String?,
        idempotency_key: String?,
        status: Increase::Export::status,
        type: Increase::Export::type_
      }

    class Export < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor category: Increase::Export::category

      attr_accessor created_at: Time

      attr_accessor file_download_url: String?

      attr_accessor file_id: String?

      attr_accessor idempotency_key: String?

      attr_accessor status: Increase::Export::status

      attr_accessor type: Increase::Export::type_

      def initialize: (
        id: String,
        category: Increase::Export::category,
        created_at: Time,
        file_download_url: String?,
        file_id: String?,
        idempotency_key: String?,
        status: Increase::Export::status,
        type: Increase::Export::type_
      ) -> void

      def to_hash: -> ::Hash[Symbol, top]

      type category =
        :account_statement_ofx
        | :transaction_csv
        | :balance_csv
        | :bookkeeping_account_balance_csv
        | :entity_csv
        | :vendor_csv
        | :dashboard_table_csv

      module Category
        extend Increase::Internal::Type::Enum

        # Export an Open Financial Exchange (OFX) file of transactions and balances for a given time range and Account.
        ACCOUNT_STATEMENT_OFX: :account_statement_ofx

        # Export a CSV of all transactions for a given time range.
        TRANSACTION_CSV: :transaction_csv

        # Export a CSV of account balances for the dates in a given range.
        BALANCE_CSV: :balance_csv

        # Export a CSV of bookkeeping account balances for the dates in a given range.
        BOOKKEEPING_ACCOUNT_BALANCE_CSV: :bookkeeping_account_balance_csv

        # Export a CSV of entities with a given status.
        ENTITY_CSV: :entity_csv

        # Export a CSV of vendors added to the third-party risk management dashboard.
        VENDOR_CSV: :vendor_csv

        # Certain dashboard tables are available as CSV exports. This export cannot be created via the API.
        DASHBOARD_TABLE_CSV: :dashboard_table_csv

        def self?.values: -> ::Array[Increase::Export::category]
      end

      type status = :pending | :complete | :failed

      module Status
        extend Increase::Internal::Type::Enum

        # Increase is generating the export.
        PENDING: :pending

        # The export has been successfully generated.
        COMPLETE: :complete

        # The export failed to generate. Increase will reach out to you to resolve the issue.
        FAILED: :failed

        def self?.values: -> ::Array[Increase::Export::status]
      end

      type type_ = :export

      module Type
        extend Increase::Internal::Type::Enum

        EXPORT: :export

        def self?.values: -> ::Array[Increase::Export::type_]
      end
    end
  end
end
