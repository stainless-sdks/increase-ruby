module Increase
  module Models
    type lockbox =
      {
        id: String,
        account_id: String,
        address: Increase::Models::Lockbox::Address,
        created_at: Time,
        description: String?,
        idempotency_key: String?,
        recipient_name: String?,
        status: Increase::Models::Lockbox::status,
        type: Increase::Models::Lockbox::type_
      }

    class Lockbox < Increase::BaseModel
      attr_accessor id: String

      attr_accessor account_id: String

      attr_accessor address: Increase::Models::Lockbox::Address

      attr_accessor created_at: Time

      attr_accessor description: String?

      attr_accessor idempotency_key: String?

      attr_accessor recipient_name: String?

      attr_accessor status: Increase::Models::Lockbox::status

      attr_accessor type: Increase::Models::Lockbox::type_

      def initialize: (
        id: String,
        account_id: String,
        address: Increase::Models::Lockbox::Address,
        created_at: Time,
        description: String?,
        idempotency_key: String?,
        recipient_name: String?,
        status: Increase::Models::Lockbox::status,
        type: Increase::Models::Lockbox::type_
      ) -> void

      def to_hash: -> Increase::Models::lockbox

      type address =
        {
          city: String,
          :line1 => String,
          :line2 => String,
          postal_code: String,
          recipient: String?,
          state: String
        }

      class Address < Increase::BaseModel
        attr_accessor city: String

        attr_accessor line1: String

        attr_accessor line2: String

        attr_accessor postal_code: String

        attr_accessor recipient: String?

        attr_accessor state: String

        def initialize: (
          city: String,
          line1: String,
          line2: String,
          postal_code: String,
          recipient: String?,
          state: String
        ) -> void

        def to_hash: -> Increase::Models::Lockbox::address
      end

      type status = :active | :inactive

      module Status
        extend Increase::Enum

        # This Lockbox is active. Checks mailed to it will be deposited automatically.
        ACTIVE: :active

        # This Lockbox is inactive. Checks mailed to it will not be deposited.
        INACTIVE: :inactive

        def self.values: -> ::Array[Increase::Models::Lockbox::status]
      end

      type type_ = :lockbox

      module Type
        extend Increase::Enum

        LOCKBOX: :lockbox

        def self.values: -> ::Array[Increase::Models::Lockbox::type_]
      end
    end
  end
end
