module Increase
  module Models
    type physical_card_profile_clone_params = ({
      carrier_image_file_id: String,
      contact_phone: String,
      description: String,
      front_image_file_id: String,
      front_text: Increase::PhysicalCardProfileCloneParams::FrontText
    } & Increase::Internal::Type::request_parameters)

    class PhysicalCardProfileCloneParams < Increase::Internal::Type::BaseModel
      extend Increase::Internal::Type::RequestParameters::Converter
      include Increase::Internal::Type::RequestParameters

      attr_reader carrier_image_file_id: String?

      def carrier_image_file_id=: (String) -> String

      attr_reader contact_phone: String?

      def contact_phone=: (String) -> String

      attr_reader description: String?

      def description=: (String) -> String

      attr_reader front_image_file_id: String?

      def front_image_file_id=: (String) -> String

      attr_reader front_text: Increase::PhysicalCardProfileCloneParams::FrontText?

      def front_text=: (Increase::PhysicalCardProfileCloneParams::FrontText) -> Increase::PhysicalCardProfileCloneParams::FrontText

      def initialize: (?carrier_image_file_id: String, ?contact_phone: String, ?description: String, ?front_image_file_id: String, ?front_text: Increase::PhysicalCardProfileCloneParams::FrontText, ?request_options: Increase::request_opts) -> void

      def to_hash: () -> {
        carrier_image_file_id: String,
        contact_phone: String,
        description: String,
        front_image_file_id: String,
        front_text: Increase::PhysicalCardProfileCloneParams::FrontText,
        request_options: Increase::RequestOptions
      }

      type front_text = {line1: String, line2: String}

      class FrontText < Increase::Internal::Type::BaseModel
        attr_accessor line1: String

        attr_reader line2: String?

        def line2=: (String) -> String

        def initialize: (line1: String, ?line2: String) -> void

        def to_hash: () -> {line1: String, line2: String}
      end
    end
  end
end
