module Increase
  module Models
    type external_account_list_params =
      {
        cursor: String,
        idempotency_key: String,
        limit: Integer,
        routing_number: String,
        status: Increase::Models::ExternalAccountListParams::Status
      }
      & Increase::Internal::Type::request_parameters

    class ExternalAccountListParams < Increase::Internal::Type::BaseModel
      extend Increase::Internal::Type::RequestParameters::Converter
      include Increase::Internal::Type::RequestParameters

      attr_reader cursor: String?

      def cursor=: (String) -> String

      attr_reader idempotency_key: String?

      def idempotency_key=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader routing_number: String?

      def routing_number=: (String) -> String

      attr_reader status: Increase::Models::ExternalAccountListParams::Status?

      def status=: (
        Increase::Models::ExternalAccountListParams::Status
      ) -> Increase::Models::ExternalAccountListParams::Status

      def initialize: (
        ?cursor: String,
        ?idempotency_key: String,
        ?limit: Integer,
        ?routing_number: String,
        ?status: Increase::Models::ExternalAccountListParams::Status,
        ?request_options: Increase::request_opts
      ) -> void

      def to_hash: -> Increase::Models::external_account_list_params

      type status =
        {
          in_: ::Array[Increase::Models::ExternalAccountListParams::Status::in_]
        }

      class Status < Increase::Internal::Type::BaseModel
        attr_reader in_: ::Array[Increase::Models::ExternalAccountListParams::Status::in_]?

        def in_=: (
          ::Array[Increase::Models::ExternalAccountListParams::Status::in_]
        ) -> ::Array[Increase::Models::ExternalAccountListParams::Status::in_]

        def initialize: (
          ?in_: ::Array[Increase::Models::ExternalAccountListParams::Status::in_]
        ) -> void

        def to_hash: -> Increase::Models::ExternalAccountListParams::status

        type in_ = :active | :archived

        module In
          extend Increase::Internal::Type::Enum

          # The External Account is active.
          ACTIVE: :active

          # The External Account is archived and won't appear in the dashboard.
          ARCHIVED: :archived

          def self?.values: -> ::Array[Increase::Models::ExternalAccountListParams::Status::in_]
        end
      end
    end
  end
end
