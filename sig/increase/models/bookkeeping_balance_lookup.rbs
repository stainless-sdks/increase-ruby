module Increase
  module Models
    type bookkeeping_balance_lookup = {balance: Integer, bookkeeping_account_id: String, type: Increase::Models::BookkeepingBalanceLookup::type_}

    class BookkeepingBalanceLookup < Increase::BaseModel
      attr_accessor balance: Integer

      attr_accessor bookkeeping_account_id: String

      attr_accessor type: Increase::Models::BookkeepingBalanceLookup::type_

      def initialize: (balance: Integer, bookkeeping_account_id: String, type: Increase::Models::BookkeepingBalanceLookup::type_) -> void
                    | (?(Increase::Models::bookkeeping_balance_lookup | Increase::BaseModel) data) -> void

      def to_hash: () -> Increase::Models::bookkeeping_balance_lookup

      type type_ = :bookkeeping_balance_lookup

      class Type < Increase::Enum
        BOOKKEEPING_BALANCE_LOOKUP: :bookkeeping_balance_lookup

        def self.values: () -> ::Array[Increase::Models::BookkeepingBalanceLookup::type_]
      end
    end
  end
end
