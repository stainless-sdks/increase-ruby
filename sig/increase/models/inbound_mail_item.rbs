module Increase
  module Models
    type inbound_mail_item = {
      id: String,
      created_at: Time,
      file_id: String,
      lockbox_id: String?,
      recipient_name: String?,
      rejection_reason: Increase::Models::InboundMailItem::rejection_reason?,
      status: Increase::Models::InboundMailItem::status,
      type: Increase::Models::InboundMailItem::type_
    }

    class InboundMailItem < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor created_at: Time

      attr_accessor file_id: String

      attr_accessor lockbox_id: String?

      attr_accessor recipient_name: String?

      attr_accessor rejection_reason: Increase::Models::InboundMailItem::rejection_reason?

      attr_accessor status: Increase::Models::InboundMailItem::status

      attr_accessor type: Increase::Models::InboundMailItem::type_

      def initialize: (id: String, created_at: Time, file_id: String, lockbox_id: String?, recipient_name: String?, rejection_reason: Increase::Models::InboundMailItem::rejection_reason?, status: Increase::Models::InboundMailItem::status, type: Increase::Models::InboundMailItem::type_) -> void

      def to_hash: () -> {
        id: String,
        created_at: Time,
        file_id: String,
        lockbox_id: String?,
        recipient_name: String?,
        rejection_reason: Increase::Models::InboundMailItem::rejection_reason?,
        status: Increase::Models::InboundMailItem::status,
        type: Increase::Models::InboundMailItem::type_
      }

      type rejection_reason = (:no_matching_lockbox | :no_check | :lockbox_not_active)

      module RejectionReason
        extend Increase::Internal::Type::Enum

        # The mail item does not match any lockbox.
        NO_MATCHING_LOCKBOX: :no_matching_lockbox

        # The mail item does not contain a check.
        NO_CHECK: :no_check

        # The Lockbox or its associated Account is not active.
        LOCKBOX_NOT_ACTIVE: :lockbox_not_active

        def self?.values: () -> ::Array[Increase::Models::InboundMailItem::rejection_reason]
      end

      type status = (:pending | :processed | :rejected)

      module Status
        extend Increase::Internal::Type::Enum

        # The mail item is pending processing.
        PENDING: :pending

        # The mail item has been processed.
        PROCESSED: :processed

        # The mail item has been rejected.
        REJECTED: :rejected

        def self?.values: () -> ::Array[Increase::Models::InboundMailItem::status]
      end

      type type_ = :inbound_mail_item

      module Type
        extend Increase::Internal::Type::Enum

        INBOUND_MAIL_ITEM: :inbound_mail_item

        def self?.values: () -> ::Array[Increase::Models::InboundMailItem::type_]
      end
    end
  end
end
