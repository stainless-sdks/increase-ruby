module Increase
  module Models
    module Simulations
      type card_dispute_action_params =
        {
          status: Increase::Models::Simulations::CardDisputeActionParams::status,
          explanation: String
        }
        & Increase::Internal::Type::request_parameters

      class CardDisputeActionParams < Increase::Internal::Type::BaseModel
        extend Increase::Internal::Type::RequestParameters::Converter
        include Increase::Internal::Type::RequestParameters

        attr_accessor status: Increase::Models::Simulations::CardDisputeActionParams::status

        attr_reader explanation: String?

        def explanation=: (String) -> String

        def initialize: (
          status: Increase::Models::Simulations::CardDisputeActionParams::status,
          ?explanation: String,
          ?request_options: Increase::request_opts
        ) -> void

        def to_hash: -> ::Hash[Symbol, top]

        type status =
          :pending_user_information | :accepted | :rejected | :lost | :won

        module Status
          extend Increase::Internal::Type::Enum

          # Increase has requested more information related to the Card Dispute from you.
          PENDING_USER_INFORMATION: :pending_user_information

          # The Card Dispute has been accepted and your funds have been returned. The card dispute will eventually transition into `won` or `lost` depending on the outcome.
          ACCEPTED: :accepted

          # The Card Dispute has been rejected.
          REJECTED: :rejected

          # The Card Dispute has been lost and funds previously credited from the acceptance have been debited.
          LOST: :lost

          # The Card Dispute has been won and no further action can be taken.
          WON: :won

          def self?.values: -> ::Array[Increase::Models::Simulations::CardDisputeActionParams::status]
        end
      end
    end
  end
end
