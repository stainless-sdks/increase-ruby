module Increase
  module Models
    module Simulations
      type card_authorization_create_response = {
        declined_transaction: Increase::DeclinedTransaction?,
        pending_transaction: Increase::PendingTransaction?,
        type: Increase::Models::Simulations::CardAuthorizationCreateResponse::type_
      }

      class CardAuthorizationCreateResponse < Increase::Internal::Type::BaseModel
        attr_accessor declined_transaction: Increase::DeclinedTransaction?

        attr_accessor pending_transaction: Increase::PendingTransaction?

        attr_accessor type: Increase::Models::Simulations::CardAuthorizationCreateResponse::type_

        def initialize: (declined_transaction: Increase::DeclinedTransaction?, pending_transaction: Increase::PendingTransaction?, type: Increase::Models::Simulations::CardAuthorizationCreateResponse::type_) -> void

        def to_hash: () -> {
          declined_transaction: Increase::DeclinedTransaction?,
          pending_transaction: Increase::PendingTransaction?,
          type: Increase::Models::Simulations::CardAuthorizationCreateResponse::type_
        }

        type type_ = :inbound_card_authorization_simulation_result

        module Type
          extend Increase::Internal::Type::Enum

          INBOUND_CARD_AUTHORIZATION_SIMULATION_RESULT: :inbound_card_authorization_simulation_result

          def self?.values: () -> ::Array[Increase::Models::Simulations::CardAuthorizationCreateResponse::type_]
        end
      end
    end
  end
end
