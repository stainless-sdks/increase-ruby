module Increase
  module Models
    type account_statement =
      {
        id: String,
        account_id: String,
        created_at: Time,
        ending_balance: Integer,
        file_id: String,
        starting_balance: Integer,
        statement_period_end: Time,
        statement_period_start: Time,
        type: Increase::Models::AccountStatement::type_
      }

    class AccountStatement < Increase::BaseModel
      attr_accessor id: String

      attr_accessor account_id: String

      attr_accessor created_at: Time

      attr_accessor ending_balance: Integer

      attr_accessor file_id: String

      attr_accessor starting_balance: Integer

      attr_accessor statement_period_end: Time

      attr_accessor statement_period_start: Time

      attr_accessor type: Increase::Models::AccountStatement::type_

      def initialize: (
        id: String,
        account_id: String,
        created_at: Time,
        ending_balance: Integer,
        file_id: String,
        starting_balance: Integer,
        statement_period_end: Time,
        statement_period_start: Time,
        type: Increase::Models::AccountStatement::type_
      ) -> void

      def to_hash: -> Increase::Models::account_statement

      type type_ = :account_statement

      module Type
        extend Increase::Enum

        ACCOUNT_STATEMENT: :account_statement

        def self?.values: -> ::Array[Increase::Models::AccountStatement::type_]
      end
    end
  end
end
