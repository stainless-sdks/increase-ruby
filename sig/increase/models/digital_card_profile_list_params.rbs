module Increase
  module Models
    type digital_card_profile_list_params =
      {
        cursor: String,
        idempotency_key: String,
        limit: Integer,
        status: Increase::Models::DigitalCardProfileListParams::Status
      }
      & Increase::request_parameters

    class DigitalCardProfileListParams < Increase::BaseModel
      extend Increase::RequestParameters::Converter
      include Increase::RequestParameters

      attr_reader cursor: String?

      def cursor=: (String) -> String

      attr_reader idempotency_key: String?

      def idempotency_key=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader status: Increase::Models::DigitalCardProfileListParams::Status?

      def status=: (
        Increase::Models::DigitalCardProfileListParams::Status
      ) -> Increase::Models::DigitalCardProfileListParams::Status

      def initialize: (
        ?cursor: String,
        ?idempotency_key: String,
        ?limit: Integer,
        ?status: Increase::Models::DigitalCardProfileListParams::Status,
        ?request_options: Increase::request_opts
      ) -> void

      def to_hash: -> Increase::Models::digital_card_profile_list_params

      type status =
        {
          in_: ::Array[Increase::Models::DigitalCardProfileListParams::Status::in_]
        }

      class Status < Increase::BaseModel
        attr_reader in_: ::Array[Increase::Models::DigitalCardProfileListParams::Status::in_]?

        def in_=: (
          ::Array[Increase::Models::DigitalCardProfileListParams::Status::in_]
        ) -> ::Array[Increase::Models::DigitalCardProfileListParams::Status::in_]

        def initialize: (
          ?in_: ::Array[Increase::Models::DigitalCardProfileListParams::Status::in_]
        ) -> void

        def to_hash: -> Increase::Models::DigitalCardProfileListParams::status

        type in_ = :pending | :rejected | :active | :archived

        class In < Increase::Enum
          # The Card Profile is awaiting review from Increase and/or processing by card networks.
          PENDING: :pending

          # There is an issue with the Card Profile preventing it from use.
          REJECTED: :rejected

          # The Card Profile can be assigned to Cards.
          ACTIVE: :active

          # The Card Profile is no longer in use.
          ARCHIVED: :archived

          def self.values: -> ::Array[Increase::Models::DigitalCardProfileListParams::Status::in_]
        end
      end
    end
  end
end
