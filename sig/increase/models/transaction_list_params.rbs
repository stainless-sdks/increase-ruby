module Increase
  module Models
    type transaction_list_params =
      {
        account_id: String,
        category: Increase::Models::TransactionListParams::Category,
        created_at: Increase::Models::TransactionListParams::CreatedAt,
        cursor: String,
        limit: Integer,
        route_id: String
      }
      & Increase::request_parameters

    class TransactionListParams < Increase::BaseModel
      extend Increase::RequestParameters::Converter
      include Increase::RequestParameters

      attr_reader account_id: String?

      def account_id=: (String) -> String

      attr_reader category: Increase::Models::TransactionListParams::Category?

      def category=: (
        Increase::Models::TransactionListParams::Category
      ) -> Increase::Models::TransactionListParams::Category

      attr_reader created_at: Increase::Models::TransactionListParams::CreatedAt?

      def created_at=: (
        Increase::Models::TransactionListParams::CreatedAt
      ) -> Increase::Models::TransactionListParams::CreatedAt

      attr_reader cursor: String?

      def cursor=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader route_id: String?

      def route_id=: (String) -> String

      def initialize:
        (
          ?account_id: String,
          ?category: Increase::Models::TransactionListParams::Category,
          ?created_at: Increase::Models::TransactionListParams::CreatedAt,
          ?cursor: String,
          ?limit: Integer,
          ?route_id: String,
          ?request_options: Increase::request_opts
        ) -> void
        | (
          ?Increase::Models::transaction_list_params | Increase::BaseModel data
        ) -> void

      def to_hash: -> Increase::Models::transaction_list_params

      type category =
        { in_: ::Array[Increase::Models::TransactionListParams::Category::in_] }

      class Category < Increase::BaseModel
        attr_reader in_: ::Array[Increase::Models::TransactionListParams::Category::in_]?

        def in_=: (
          ::Array[Increase::Models::TransactionListParams::Category::in_]
        ) -> ::Array[Increase::Models::TransactionListParams::Category::in_]

        def initialize:
          (
            ?in_: ::Array[Increase::Models::TransactionListParams::Category::in_]
          ) -> void
          | (
            ?Increase::Models::TransactionListParams::category
            | Increase::BaseModel data
          ) -> void

        def to_hash: -> Increase::Models::TransactionListParams::category

        type in_ =
          :account_transfer_intention
          | :ach_transfer_intention
          | :ach_transfer_rejection
          | :ach_transfer_return
          | :cashback_payment
          | :card_dispute_acceptance
          | :card_dispute_loss
          | :card_refund
          | :card_settlement
          | :card_revenue_payment
          | :check_deposit_acceptance
          | :check_deposit_return
          | :check_transfer_deposit
          | :fee_payment
          | :inbound_ach_transfer
          | :inbound_ach_transfer_return_intention
          | :inbound_check_deposit_return_intention
          | :inbound_check_adjustment
          | :inbound_real_time_payments_transfer_confirmation
          | :inbound_real_time_payments_transfer_decline
          | :inbound_wire_reversal
          | :inbound_wire_transfer
          | :inbound_wire_transfer_reversal
          | :interest_payment
          | :internal_source
          | :real_time_payments_transfer_acknowledgement
          | :sample_funds
          | :wire_transfer_intention
          | :other

        class In < Increase::Enum
          # Account Transfer Intention: details will be under the `account_transfer_intention` object.
          ACCOUNT_TRANSFER_INTENTION: :account_transfer_intention

          # ACH Transfer Intention: details will be under the `ach_transfer_intention` object.
          ACH_TRANSFER_INTENTION: :ach_transfer_intention

          # ACH Transfer Rejection: details will be under the `ach_transfer_rejection` object.
          ACH_TRANSFER_REJECTION: :ach_transfer_rejection

          # ACH Transfer Return: details will be under the `ach_transfer_return` object.
          ACH_TRANSFER_RETURN: :ach_transfer_return

          # Cashback Payment: details will be under the `cashback_payment` object.
          CASHBACK_PAYMENT: :cashback_payment

          # Card Dispute Acceptance: details will be under the `card_dispute_acceptance` object.
          CARD_DISPUTE_ACCEPTANCE: :card_dispute_acceptance

          # Card Dispute Loss: details will be under the `card_dispute_loss` object.
          CARD_DISPUTE_LOSS: :card_dispute_loss

          # Card Refund: details will be under the `card_refund` object.
          CARD_REFUND: :card_refund

          # Card Settlement: details will be under the `card_settlement` object.
          CARD_SETTLEMENT: :card_settlement

          # Card Revenue Payment: details will be under the `card_revenue_payment` object.
          CARD_REVENUE_PAYMENT: :card_revenue_payment

          # Check Deposit Acceptance: details will be under the `check_deposit_acceptance` object.
          CHECK_DEPOSIT_ACCEPTANCE: :check_deposit_acceptance

          # Check Deposit Return: details will be under the `check_deposit_return` object.
          CHECK_DEPOSIT_RETURN: :check_deposit_return

          # Check Transfer Deposit: details will be under the `check_transfer_deposit` object.
          CHECK_TRANSFER_DEPOSIT: :check_transfer_deposit

          # Fee Payment: details will be under the `fee_payment` object.
          FEE_PAYMENT: :fee_payment

          # Inbound ACH Transfer Intention: details will be under the `inbound_ach_transfer` object.
          INBOUND_ACH_TRANSFER: :inbound_ach_transfer

          # Inbound ACH Transfer Return Intention: details will be under the `inbound_ach_transfer_return_intention` object.
          INBOUND_ACH_TRANSFER_RETURN_INTENTION: :inbound_ach_transfer_return_intention

          # Inbound Check Deposit Return Intention: details will be under the `inbound_check_deposit_return_intention` object.
          INBOUND_CHECK_DEPOSIT_RETURN_INTENTION: :inbound_check_deposit_return_intention

          # Inbound Check Adjustment: details will be under the `inbound_check_adjustment` object.
          INBOUND_CHECK_ADJUSTMENT: :inbound_check_adjustment

          # Inbound Real-Time Payments Transfer Confirmation: details will be under the `inbound_real_time_payments_transfer_confirmation` object.
          INBOUND_REAL_TIME_PAYMENTS_TRANSFER_CONFIRMATION: :inbound_real_time_payments_transfer_confirmation

          # Inbound Real-Time Payments Transfer Decline: details will be under the `inbound_real_time_payments_transfer_decline` object.
          INBOUND_REAL_TIME_PAYMENTS_TRANSFER_DECLINE: :inbound_real_time_payments_transfer_decline

          # Inbound Wire Reversal: details will be under the `inbound_wire_reversal` object.
          INBOUND_WIRE_REVERSAL: :inbound_wire_reversal

          # Inbound Wire Transfer Intention: details will be under the `inbound_wire_transfer` object.
          INBOUND_WIRE_TRANSFER: :inbound_wire_transfer

          # Inbound Wire Transfer Reversal Intention: details will be under the `inbound_wire_transfer_reversal` object.
          INBOUND_WIRE_TRANSFER_REVERSAL: :inbound_wire_transfer_reversal

          # Interest Payment: details will be under the `interest_payment` object.
          INTEREST_PAYMENT: :interest_payment

          # Internal Source: details will be under the `internal_source` object.
          INTERNAL_SOURCE: :internal_source

          # Real-Time Payments Transfer Acknowledgement: details will be under the `real_time_payments_transfer_acknowledgement` object.
          REAL_TIME_PAYMENTS_TRANSFER_ACKNOWLEDGEMENT: :real_time_payments_transfer_acknowledgement

          # Sample Funds: details will be under the `sample_funds` object.
          SAMPLE_FUNDS: :sample_funds

          # Wire Transfer Intention: details will be under the `wire_transfer_intention` object.
          WIRE_TRANSFER_INTENTION: :wire_transfer_intention

          # The Transaction was made for an undocumented or deprecated reason.
          OTHER: :other

          def self.values: -> ::Array[Increase::Models::TransactionListParams::Category::in_]
        end
      end

      type created_at =
        { after: Time, before: Time, on_or_after: Time, on_or_before: Time }

      class CreatedAt < Increase::BaseModel
        attr_reader after: Time?

        def after=: (Time) -> Time

        attr_reader before: Time?

        def before=: (Time) -> Time

        attr_reader on_or_after: Time?

        def on_or_after=: (Time) -> Time

        attr_reader on_or_before: Time?

        def on_or_before=: (Time) -> Time

        def initialize:
          (
            ?after: Time,
            ?before: Time,
            ?on_or_after: Time,
            ?on_or_before: Time
          ) -> void
          | (
            ?Increase::Models::TransactionListParams::created_at
            | Increase::BaseModel data
          ) -> void

        def to_hash: -> Increase::Models::TransactionListParams::created_at
      end
    end
  end
end
