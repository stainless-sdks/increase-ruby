module Increase
  module Models
    type bookkeeping_entry_set_create_params =
      {
        entries: ::Array[Increase::BookkeepingEntrySetCreateParams::Entry],
        date: Time,
        transaction_id: String
      }
      & Increase::Internal::Type::request_parameters

    class BookkeepingEntrySetCreateParams < Increase::Internal::Type::BaseModel
      extend Increase::Internal::Type::RequestParameters::Converter
      include Increase::Internal::Type::RequestParameters

      attr_accessor entries: ::Array[Increase::BookkeepingEntrySetCreateParams::Entry]

      attr_reader date: Time?

      def date=: (Time) -> Time

      attr_reader transaction_id: String?

      def transaction_id=: (String) -> String

      def initialize: (
        entries: ::Array[Increase::BookkeepingEntrySetCreateParams::Entry],
        ?date: Time,
        ?transaction_id: String,
        ?request_options: Increase::request_opts
      ) -> void

      def to_hash: -> {
        entries: ::Array[Increase::BookkeepingEntrySetCreateParams::Entry],
        date: Time,
        transaction_id: String,
        request_options: Increase::RequestOptions
      }

      type entry = { account_id: String, amount: Integer }

      class Entry < Increase::Internal::Type::BaseModel
        attr_accessor account_id: String

        attr_accessor amount: Integer

        def initialize: (account_id: String, amount: Integer) -> void

        def to_hash: -> { account_id: String, amount: Integer }
      end
    end
  end
end
