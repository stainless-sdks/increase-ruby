module Increase
  module Models
    type oauth_connection =
      {
        id: String,
        created_at: Time,
        deleted_at: Time?,
        group_id: String,
        oauth_application_id: String,
        status: Increase::OAuthConnection::status,
        type: Increase::OAuthConnection::type_
      }

    class OAuthConnection < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor created_at: Time

      attr_accessor deleted_at: Time?

      attr_accessor group_id: String

      attr_accessor oauth_application_id: String

      attr_accessor status: Increase::OAuthConnection::status

      attr_accessor type: Increase::OAuthConnection::type_

      def initialize: (
        id: String,
        created_at: Time,
        deleted_at: Time?,
        group_id: String,
        oauth_application_id: String,
        status: Increase::OAuthConnection::status,
        type: Increase::OAuthConnection::type_
      ) -> void

      type status = :active | :inactive

      module Status
        extend Increase::Internal::Type::Enum

        # The OAuth connection is active.
        ACTIVE: :active

        # The OAuth connection is permanently deactivated.
        INACTIVE: :inactive

        def self?.values: -> ::Array[Increase::OAuthConnection::status]
      end

      type type_ = :oauth_connection

      module Type
        extend Increase::Internal::Type::Enum

        OAUTH_CONNECTION: :oauth_connection

        def self?.values: -> ::Array[Increase::OAuthConnection::type_]
      end
    end
  end
end
