module Increase
  module Models
    type inbound_ach_transfer_list_params = ({
      account_id: String,
      account_number_id: String,
      created_at: Increase::InboundACHTransferListParams::CreatedAt,
      cursor: String,
      limit: Integer,
      status: Increase::InboundACHTransferListParams::Status
    } & Increase::Internal::Type::request_parameters)

    class InboundACHTransferListParams < Increase::Internal::Type::BaseModel
      extend Increase::Internal::Type::RequestParameters::Converter
      include Increase::Internal::Type::RequestParameters

      attr_reader account_id: String?

      def account_id=: (String) -> String

      attr_reader account_number_id: String?

      def account_number_id=: (String) -> String

      attr_reader created_at: Increase::InboundACHTransferListParams::CreatedAt?

      def created_at=: (Increase::InboundACHTransferListParams::CreatedAt) -> Increase::InboundACHTransferListParams::CreatedAt

      attr_reader cursor: String?

      def cursor=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader status: Increase::InboundACHTransferListParams::Status?

      def status=: (Increase::InboundACHTransferListParams::Status) -> Increase::InboundACHTransferListParams::Status

      def initialize: (?account_id: String, ?account_number_id: String, ?created_at: Increase::InboundACHTransferListParams::CreatedAt, ?cursor: String, ?limit: Integer, ?status: Increase::InboundACHTransferListParams::Status, ?request_options: Increase::request_opts) -> void

      def to_hash: () -> {
        account_id: String,
        account_number_id: String,
        created_at: Increase::InboundACHTransferListParams::CreatedAt,
        cursor: String,
        limit: Integer,
        status: Increase::InboundACHTransferListParams::Status,
        request_options: Increase::RequestOptions
      }

      type created_at = {after: Time, before: Time, on_or_after: Time, on_or_before: Time}

      class CreatedAt < Increase::Internal::Type::BaseModel
        attr_reader after: Time?

        def after=: (Time) -> Time

        attr_reader before: Time?

        def before=: (Time) -> Time

        attr_reader on_or_after: Time?

        def on_or_after=: (Time) -> Time

        attr_reader on_or_before: Time?

        def on_or_before=: (Time) -> Time

        def initialize: (?after: Time, ?before: Time, ?on_or_after: Time, ?on_or_before: Time) -> void

        def to_hash: () -> {after: Time, before: Time, on_or_after: Time, on_or_before: Time}
      end

      type status = {in_: ::Array[Increase::Models::InboundACHTransferListParams::Status::in_]}

      class Status < Increase::Internal::Type::BaseModel
        attr_reader in_: ::Array[Increase::Models::InboundACHTransferListParams::Status::in_]?

        def in_=: (::Array[Increase::Models::InboundACHTransferListParams::Status::in_]) -> ::Array[Increase::Models::InboundACHTransferListParams::Status::in_]

        def initialize: (?in_: ::Array[Increase::Models::InboundACHTransferListParams::Status::in_]) -> void

        def to_hash: () -> {in_: ::Array[Increase::Models::InboundACHTransferListParams::Status::in_]}

        type in_ = (:pending | :declined | :accepted | :returned)

        module In
          extend Increase::Internal::Type::Enum

          # The Inbound ACH Transfer is awaiting action, will transition automatically if no action is taken.
          PENDING: :pending

          # The Inbound ACH Transfer has been declined.
          DECLINED: :declined

          # The Inbound ACH Transfer is accepted.
          ACCEPTED: :accepted

          # The Inbound ACH Transfer has been returned.
          RETURNED: :returned

          def self?.values: () -> ::Array[Increase::Models::InboundACHTransferListParams::Status::in_]
        end
      end
    end
  end
end
