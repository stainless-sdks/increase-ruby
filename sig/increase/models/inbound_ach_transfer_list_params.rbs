module Increase
  module Models
    type inbound_ach_transfer_list_params = ({
      account_id: String,
      account_number_id: String,
      created_at: Increase::Models::InboundACHTransferListParams::CreatedAt,
      cursor: String,
      limit: Integer,
      status: Increase::Models::InboundACHTransferListParams::status
    } & Increase::request_parameters)

    class InboundACHTransferListParams < Increase::BaseModel
      extend Increase::RequestParameters::Converter
      include Increase::RequestParameters

      attr_reader account_id: String?

      def account_id=: (String) -> String

      attr_reader account_number_id: String?

      def account_number_id=: (String) -> String

      attr_reader created_at: Increase::Models::InboundACHTransferListParams::CreatedAt?

      def created_at=: (Increase::Models::InboundACHTransferListParams::CreatedAt) -> Increase::Models::InboundACHTransferListParams::CreatedAt

      attr_reader cursor: String?

      def cursor=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader status: Increase::Models::InboundACHTransferListParams::status?

      def status=: (Increase::Models::InboundACHTransferListParams::status) -> Increase::Models::InboundACHTransferListParams::status

      def initialize: (account_id: String, account_number_id: String, created_at: Increase::Models::InboundACHTransferListParams::CreatedAt, cursor: String, limit: Integer, status: Increase::Models::InboundACHTransferListParams::status, request_options: Increase::request_opts) -> void
                    | (?(Increase::Models::inbound_ach_transfer_list_params | Increase::BaseModel) data) -> void

      def to_hash: () -> Increase::Models::inbound_ach_transfer_list_params

      type created_at = {after: Time, before: Time, on_or_after: Time, on_or_before: Time}

      class CreatedAt < Increase::BaseModel
        attr_reader after: Time?

        def after=: (Time) -> Time

        attr_reader before: Time?

        def before=: (Time) -> Time

        attr_reader on_or_after: Time?

        def on_or_after=: (Time) -> Time

        attr_reader on_or_before: Time?

        def on_or_before=: (Time) -> Time

        def initialize: (after: Time, before: Time, on_or_after: Time, on_or_before: Time) -> void
                      | (?(Increase::Models::InboundACHTransferListParams::created_at | Increase::BaseModel) data) -> void

        def to_hash: () -> Increase::Models::InboundACHTransferListParams::created_at
      end

      type status = (:pending | :declined | :accepted | :returned)

      class Status < Increase::Enum
        # The Inbound ACH Transfer is awaiting action, will transition automatically if no action is taken.
        PENDING: :pending

        # The Inbound ACH Transfer has been declined.
        DECLINED: :declined

        # The Inbound ACH Transfer is accepted.
        ACCEPTED: :accepted

        # The Inbound ACH Transfer has been returned.
        RETURNED: :returned

        def self.values: () -> ::Array[Increase::Models::InboundACHTransferListParams::status]
      end
    end
  end
end
