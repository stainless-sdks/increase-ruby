module Increase
  module Models
    type digital_wallet_token =
      {
        id: String,
        card_id: String,
        created_at: Time,
        status: Increase::Models::DigitalWalletToken::status,
        token_requestor: Increase::Models::DigitalWalletToken::token_requestor,
        type: Increase::Models::DigitalWalletToken::type_,
        updates: ::Array[Increase::Models::DigitalWalletToken::Update]
      }

    class DigitalWalletToken < Increase::BaseModel
      attr_accessor id: String

      attr_accessor card_id: String

      attr_accessor created_at: Time

      attr_accessor status: Increase::Models::DigitalWalletToken::status

      attr_accessor token_requestor: Increase::Models::DigitalWalletToken::token_requestor

      attr_accessor type: Increase::Models::DigitalWalletToken::type_

      attr_accessor updates: ::Array[Increase::Models::DigitalWalletToken::Update]

      def initialize: (
        id: String,
        card_id: String,
        created_at: Time,
        status: Increase::Models::DigitalWalletToken::status,
        token_requestor: Increase::Models::DigitalWalletToken::token_requestor,
        type: Increase::Models::DigitalWalletToken::type_,
        updates: ::Array[Increase::Models::DigitalWalletToken::Update]
      ) -> void

      def to_hash: -> Increase::Models::digital_wallet_token

      type status = :active | :inactive | :suspended | :deactivated

      module Status
        extend Increase::Enum

        # The digital wallet token is active.
        ACTIVE: :active

        # The digital wallet token has been created but not successfully activated via two-factor authentication yet.
        INACTIVE: :inactive

        # The digital wallet token has been temporarily paused.
        SUSPENDED: :suspended

        # The digital wallet token has been permanently canceled.
        DEACTIVATED: :deactivated

        def self?.values: -> ::Array[Increase::Models::DigitalWalletToken::status]
      end

      type token_requestor = :apple_pay | :google_pay | :samsung_pay | :unknown

      module TokenRequestor
        extend Increase::Enum

        # Apple Pay
        APPLE_PAY: :apple_pay

        # Google Pay
        GOOGLE_PAY: :google_pay

        # Samsung Pay
        SAMSUNG_PAY: :samsung_pay

        # Unknown
        UNKNOWN: :unknown

        def self?.values: -> ::Array[Increase::Models::DigitalWalletToken::token_requestor]
      end

      type type_ = :digital_wallet_token

      module Type
        extend Increase::Enum

        DIGITAL_WALLET_TOKEN: :digital_wallet_token

        def self?.values: -> ::Array[Increase::Models::DigitalWalletToken::type_]
      end

      type update =
        {
          status: Increase::Models::DigitalWalletToken::Update::status,
          timestamp: Time
        }

      class Update < Increase::BaseModel
        attr_accessor status: Increase::Models::DigitalWalletToken::Update::status

        attr_accessor timestamp: Time

        def initialize: (
          status: Increase::Models::DigitalWalletToken::Update::status,
          timestamp: Time
        ) -> void

        def to_hash: -> Increase::Models::DigitalWalletToken::update

        type status = :active | :inactive | :suspended | :deactivated

        module Status
          extend Increase::Enum

          # The digital wallet token is active.
          ACTIVE: :active

          # The digital wallet token has been created but not successfully activated via two-factor authentication yet.
          INACTIVE: :inactive

          # The digital wallet token has been temporarily paused.
          SUSPENDED: :suspended

          # The digital wallet token has been permanently canceled.
          DEACTIVATED: :deactivated

          def self?.values: -> ::Array[Increase::Models::DigitalWalletToken::Update::status]
        end
      end
    end
  end
end
