module Increase
  module Models
    type wire_drawdown_request = {
      id: String,
      account_number_id: String,
      amount: Integer,
      created_at: Time,
      creditor_address: Increase::WireDrawdownRequest::CreditorAddress,
      creditor_name: String,
      currency: String,
      debtor_account_number: String,
      debtor_address: Increase::WireDrawdownRequest::DebtorAddress,
      debtor_name: String,
      debtor_routing_number: String,
      fulfillment_inbound_wire_transfer_id: String?,
      idempotency_key: String?,
      status: Increase::Models::WireDrawdownRequest::status,
      submission: Increase::WireDrawdownRequest::Submission?,
      type: Increase::Models::WireDrawdownRequest::type_,
      unstructured_remittance_information: String
    }

    class WireDrawdownRequest < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor account_number_id: String

      attr_accessor amount: Integer

      attr_accessor created_at: Time

      attr_accessor creditor_address: Increase::WireDrawdownRequest::CreditorAddress

      attr_accessor creditor_name: String

      attr_accessor currency: String

      attr_accessor debtor_account_number: String

      attr_accessor debtor_address: Increase::WireDrawdownRequest::DebtorAddress

      attr_accessor debtor_name: String

      attr_accessor debtor_routing_number: String

      attr_accessor fulfillment_inbound_wire_transfer_id: String?

      attr_accessor idempotency_key: String?

      attr_accessor status: Increase::Models::WireDrawdownRequest::status

      attr_accessor submission: Increase::WireDrawdownRequest::Submission?

      attr_accessor type: Increase::Models::WireDrawdownRequest::type_

      attr_accessor unstructured_remittance_information: String

      def initialize: (id: String, account_number_id: String, amount: Integer, created_at: Time, creditor_address: Increase::WireDrawdownRequest::CreditorAddress, creditor_name: String, currency: String, debtor_account_number: String, debtor_address: Increase::WireDrawdownRequest::DebtorAddress, debtor_name: String, debtor_routing_number: String, fulfillment_inbound_wire_transfer_id: String?, idempotency_key: String?, status: Increase::Models::WireDrawdownRequest::status, submission: Increase::WireDrawdownRequest::Submission?, type: Increase::Models::WireDrawdownRequest::type_, unstructured_remittance_information: String) -> void

      def to_hash: () -> {
        id: String,
        account_number_id: String,
        amount: Integer,
        created_at: Time,
        creditor_address: Increase::WireDrawdownRequest::CreditorAddress,
        creditor_name: String,
        currency: String,
        debtor_account_number: String,
        debtor_address: Increase::WireDrawdownRequest::DebtorAddress,
        debtor_name: String,
        debtor_routing_number: String,
        fulfillment_inbound_wire_transfer_id: String?,
        idempotency_key: String?,
        status: Increase::Models::WireDrawdownRequest::status,
        submission: Increase::WireDrawdownRequest::Submission?,
        type: Increase::Models::WireDrawdownRequest::type_,
        unstructured_remittance_information: String
      }

      type creditor_address = {city: String, country: String, line1: String, line2: String?, postal_code: String?, state: String?}

      class CreditorAddress < Increase::Internal::Type::BaseModel
        attr_accessor city: String

        attr_accessor country: String

        attr_accessor line1: String

        attr_accessor line2: String?

        attr_accessor postal_code: String?

        attr_accessor state: String?

        def initialize: (city: String, country: String, line1: String, line2: String?, postal_code: String?, state: String?) -> void

        def to_hash: () -> {city: String, country: String, line1: String, line2: String?, postal_code: String?, state: String?}
      end

      type debtor_address = {city: String, country: String, line1: String, line2: String?, postal_code: String?, state: String?}

      class DebtorAddress < Increase::Internal::Type::BaseModel
        attr_accessor city: String

        attr_accessor country: String

        attr_accessor line1: String

        attr_accessor line2: String?

        attr_accessor postal_code: String?

        attr_accessor state: String?

        def initialize: (city: String, country: String, line1: String, line2: String?, postal_code: String?, state: String?) -> void

        def to_hash: () -> {city: String, country: String, line1: String, line2: String?, postal_code: String?, state: String?}
      end

      type status = (:pending_submission | :pending_response | :fulfilled | :refused)

      module Status
        extend Increase::Internal::Type::Enum

        # The drawdown request is queued to be submitted to Fedwire.
        PENDING_SUBMISSION: :pending_submission

        # The drawdown request has been sent and the recipient should respond in some way.
        PENDING_RESPONSE: :pending_response

        # The drawdown request has been fulfilled by the recipient.
        FULFILLED: :fulfilled

        # The drawdown request has been refused by the recipient.
        REFUSED: :refused

        def self?.values: () -> ::Array[Increase::Models::WireDrawdownRequest::status]
      end

      type submission = {input_message_accountability_data: String}

      class Submission < Increase::Internal::Type::BaseModel
        attr_accessor input_message_accountability_data: String

        def initialize: (input_message_accountability_data: String) -> void

        def to_hash: () -> {input_message_accountability_data: String}
      end

      type type_ = :wire_drawdown_request

      module Type
        extend Increase::Internal::Type::Enum

        WIRE_DRAWDOWN_REQUEST: :wire_drawdown_request

        def self?.values: () -> ::Array[Increase::Models::WireDrawdownRequest::type_]
      end
    end
  end
end
