module Increase
  module Models
    type wire_drawdown_request =
      {
        id: String,
        account_number_id: String,
        amount: Integer,
        created_at: Time,
        currency: String,
        fulfillment_inbound_wire_transfer_id: String?,
        idempotency_key: String?,
        message_to_recipient: String,
        :originator_address_line1 => String?,
        :originator_address_line2 => String?,
        :originator_address_line3 => String?,
        originator_name: String?,
        recipient_account_number: String,
        :recipient_address_line1 => String?,
        :recipient_address_line2 => String?,
        :recipient_address_line3 => String?,
        recipient_name: String?,
        recipient_routing_number: String,
        status: Increase::Models::WireDrawdownRequest::status,
        submission: Increase::WireDrawdownRequest::Submission?,
        type: Increase::Models::WireDrawdownRequest::type_
      }

    class WireDrawdownRequest < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor account_number_id: String

      attr_accessor amount: Integer

      attr_accessor created_at: Time

      attr_accessor currency: String

      attr_accessor fulfillment_inbound_wire_transfer_id: String?

      attr_accessor idempotency_key: String?

      attr_accessor message_to_recipient: String

      attr_accessor originator_address_line1: String?

      attr_accessor originator_address_line2: String?

      attr_accessor originator_address_line3: String?

      attr_accessor originator_name: String?

      attr_accessor recipient_account_number: String

      attr_accessor recipient_address_line1: String?

      attr_accessor recipient_address_line2: String?

      attr_accessor recipient_address_line3: String?

      attr_accessor recipient_name: String?

      attr_accessor recipient_routing_number: String

      attr_accessor status: Increase::Models::WireDrawdownRequest::status

      attr_accessor submission: Increase::WireDrawdownRequest::Submission?

      attr_accessor type: Increase::Models::WireDrawdownRequest::type_

      def initialize: (
        id: String,
        account_number_id: String,
        amount: Integer,
        created_at: Time,
        currency: String,
        fulfillment_inbound_wire_transfer_id: String?,
        idempotency_key: String?,
        message_to_recipient: String,
        originator_address_line1: String?,
        originator_address_line2: String?,
        originator_address_line3: String?,
        originator_name: String?,
        recipient_account_number: String,
        recipient_address_line1: String?,
        recipient_address_line2: String?,
        recipient_address_line3: String?,
        recipient_name: String?,
        recipient_routing_number: String,
        status: Increase::Models::WireDrawdownRequest::status,
        submission: Increase::WireDrawdownRequest::Submission?,
        type: Increase::Models::WireDrawdownRequest::type_
      ) -> void

      def to_hash: -> {
        id: String,
        account_number_id: String,
        amount: Integer,
        created_at: Time,
        currency: String,
        fulfillment_inbound_wire_transfer_id: String?,
        idempotency_key: String?,
        message_to_recipient: String,
        :originator_address_line1 => String?,
        :originator_address_line2 => String?,
        :originator_address_line3 => String?,
        originator_name: String?,
        recipient_account_number: String,
        :recipient_address_line1 => String?,
        :recipient_address_line2 => String?,
        :recipient_address_line3 => String?,
        recipient_name: String?,
        recipient_routing_number: String,
        status: Increase::Models::WireDrawdownRequest::status,
        submission: Increase::WireDrawdownRequest::Submission?,
        type: Increase::Models::WireDrawdownRequest::type_
      }

      type status =
        :pending_submission | :pending_response | :fulfilled | :refused

      module Status
        extend Increase::Internal::Type::Enum

        # The drawdown request is queued to be submitted to Fedwire.
        PENDING_SUBMISSION: :pending_submission

        # The drawdown request has been sent and the recipient should respond in some way.
        PENDING_RESPONSE: :pending_response

        # The drawdown request has been fulfilled by the recipient.
        FULFILLED: :fulfilled

        # The drawdown request has been refused by the recipient.
        REFUSED: :refused

        def self?.values: -> ::Array[Increase::Models::WireDrawdownRequest::status]
      end

      type submission = { input_message_accountability_data: String }

      class Submission < Increase::Internal::Type::BaseModel
        attr_accessor input_message_accountability_data: String

        def initialize: (input_message_accountability_data: String) -> void

        def to_hash: -> { input_message_accountability_data: String }
      end

      type type_ = :wire_drawdown_request

      module Type
        extend Increase::Internal::Type::Enum

        WIRE_DRAWDOWN_REQUEST: :wire_drawdown_request

        def self?.values: -> ::Array[Increase::Models::WireDrawdownRequest::type_]
      end
    end
  end
end
