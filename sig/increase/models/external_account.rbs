module Increase
  module Models
    type external_account =
      {
        id: String,
        account_holder: Increase::Models::ExternalAccount::account_holder,
        account_number: String,
        created_at: Time,
        description: String,
        funding: Increase::Models::ExternalAccount::funding,
        idempotency_key: String?,
        routing_number: String,
        status: Increase::Models::ExternalAccount::status,
        type: Increase::Models::ExternalAccount::type_,
        verification_status: Increase::Models::ExternalAccount::verification_status
      }

    class ExternalAccount < Increase::BaseModel
      attr_accessor id: String

      attr_accessor account_holder: Increase::Models::ExternalAccount::account_holder

      attr_accessor account_number: String

      attr_accessor created_at: Time

      attr_accessor description: String

      attr_accessor funding: Increase::Models::ExternalAccount::funding

      attr_accessor idempotency_key: String?

      attr_accessor routing_number: String

      attr_accessor status: Increase::Models::ExternalAccount::status

      attr_accessor type: Increase::Models::ExternalAccount::type_

      attr_accessor verification_status: Increase::Models::ExternalAccount::verification_status

      def initialize: (
        id: String,
        account_holder: Increase::Models::ExternalAccount::account_holder,
        account_number: String,
        created_at: Time,
        description: String,
        funding: Increase::Models::ExternalAccount::funding,
        idempotency_key: String?,
        routing_number: String,
        status: Increase::Models::ExternalAccount::status,
        type: Increase::Models::ExternalAccount::type_,
        verification_status: Increase::Models::ExternalAccount::verification_status
      ) -> void

      def to_hash: -> Increase::Models::external_account

      type account_holder = :business | :individual | :unknown

      module AccountHolder
        extend Increase::Enum

        # The External Account is owned by a business.
        BUSINESS: :business

        # The External Account is owned by an individual.
        INDIVIDUAL: :individual

        # It's unknown what kind of entity owns the External Account.
        UNKNOWN: :unknown

        def self?.values: -> ::Array[Increase::Models::ExternalAccount::account_holder]
      end

      type funding = :checking | :savings | :other

      module Funding
        extend Increase::Enum

        # A checking account.
        CHECKING: :checking

        # A savings account.
        SAVINGS: :savings

        # A different type of account.
        OTHER: :other

        def self?.values: -> ::Array[Increase::Models::ExternalAccount::funding]
      end

      type status = :active | :archived

      module Status
        extend Increase::Enum

        # The External Account is active.
        ACTIVE: :active

        # The External Account is archived and won't appear in the dashboard.
        ARCHIVED: :archived

        def self?.values: -> ::Array[Increase::Models::ExternalAccount::status]
      end

      type type_ = :external_account

      module Type
        extend Increase::Enum

        EXTERNAL_ACCOUNT: :external_account

        def self?.values: -> ::Array[Increase::Models::ExternalAccount::type_]
      end

      type verification_status = :unverified | :pending | :verified

      module VerificationStatus
        extend Increase::Enum

        # The External Account has not been verified.
        UNVERIFIED: :unverified

        # The External Account is in the process of being verified.
        PENDING: :pending

        # The External Account is verified.
        VERIFIED: :verified

        def self?.values: -> ::Array[Increase::Models::ExternalAccount::verification_status]
      end
    end
  end
end
