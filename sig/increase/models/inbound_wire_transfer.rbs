module Increase
  module Models
    type inbound_wire_transfer = {
      id: String,
      account_id: String,
      account_number_id: String,
      amount: Integer,
      beneficiary_address_line1: String?,
      beneficiary_address_line2: String?,
      beneficiary_address_line3: String?,
      beneficiary_name: String?,
      beneficiary_reference: String?,
      created_at: Time,
      description: String,
      input_message_accountability_data: String?,
      originator_address_line1: String?,
      originator_address_line2: String?,
      originator_address_line3: String?,
      originator_name: String?,
      originator_routing_number: String?,
      originator_to_beneficiary_information: String?,
      originator_to_beneficiary_information_line1: String?,
      originator_to_beneficiary_information_line2: String?,
      originator_to_beneficiary_information_line3: String?,
      originator_to_beneficiary_information_line4: String?,
      reversal: Increase::InboundWireTransfer::Reversal?,
      sender_reference: String?,
      status: Increase::Models::InboundWireTransfer::status,
      type: Increase::Models::InboundWireTransfer::type_
    }

    class InboundWireTransfer < Increase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor account_id: String

      attr_accessor account_number_id: String

      attr_accessor amount: Integer

      attr_accessor beneficiary_address_line1: String?

      attr_accessor beneficiary_address_line2: String?

      attr_accessor beneficiary_address_line3: String?

      attr_accessor beneficiary_name: String?

      attr_accessor beneficiary_reference: String?

      attr_accessor created_at: Time

      attr_accessor description: String

      attr_accessor input_message_accountability_data: String?

      attr_accessor originator_address_line1: String?

      attr_accessor originator_address_line2: String?

      attr_accessor originator_address_line3: String?

      attr_accessor originator_name: String?

      attr_accessor originator_routing_number: String?

      attr_accessor originator_to_beneficiary_information: String?

      attr_accessor originator_to_beneficiary_information_line1: String?

      attr_accessor originator_to_beneficiary_information_line2: String?

      attr_accessor originator_to_beneficiary_information_line3: String?

      attr_accessor originator_to_beneficiary_information_line4: String?

      attr_accessor reversal: Increase::InboundWireTransfer::Reversal?

      attr_accessor sender_reference: String?

      attr_accessor status: Increase::Models::InboundWireTransfer::status

      attr_accessor type: Increase::Models::InboundWireTransfer::type_

      def initialize: (id: String, account_id: String, account_number_id: String, amount: Integer, beneficiary_address_line1: String?, beneficiary_address_line2: String?, beneficiary_address_line3: String?, beneficiary_name: String?, beneficiary_reference: String?, created_at: Time, description: String, input_message_accountability_data: String?, originator_address_line1: String?, originator_address_line2: String?, originator_address_line3: String?, originator_name: String?, originator_routing_number: String?, originator_to_beneficiary_information: String?, originator_to_beneficiary_information_line1: String?, originator_to_beneficiary_information_line2: String?, originator_to_beneficiary_information_line3: String?, originator_to_beneficiary_information_line4: String?, reversal: Increase::InboundWireTransfer::Reversal?, sender_reference: String?, status: Increase::Models::InboundWireTransfer::status, type: Increase::Models::InboundWireTransfer::type_) -> void

      def to_hash: () -> {
        id: String,
        account_id: String,
        account_number_id: String,
        amount: Integer,
        beneficiary_address_line1: String?,
        beneficiary_address_line2: String?,
        beneficiary_address_line3: String?,
        beneficiary_name: String?,
        beneficiary_reference: String?,
        created_at: Time,
        description: String,
        input_message_accountability_data: String?,
        originator_address_line1: String?,
        originator_address_line2: String?,
        originator_address_line3: String?,
        originator_name: String?,
        originator_routing_number: String?,
        originator_to_beneficiary_information: String?,
        originator_to_beneficiary_information_line1: String?,
        originator_to_beneficiary_information_line2: String?,
        originator_to_beneficiary_information_line3: String?,
        originator_to_beneficiary_information_line4: String?,
        reversal: Increase::InboundWireTransfer::Reversal?,
        sender_reference: String?,
        status: Increase::Models::InboundWireTransfer::status,
        type: Increase::Models::InboundWireTransfer::type_
      }

      type reversal = {reason: Increase::Models::InboundWireTransfer::Reversal::reason, reversed_at: Time}

      class Reversal < Increase::Internal::Type::BaseModel
        attr_accessor reason: Increase::Models::InboundWireTransfer::Reversal::reason

        attr_accessor reversed_at: Time

        def initialize: (reason: Increase::Models::InboundWireTransfer::Reversal::reason, reversed_at: Time) -> void

        def to_hash: () -> {reason: Increase::Models::InboundWireTransfer::Reversal::reason, reversed_at: Time}

        type reason = (:duplicate | :creditor_request)

        module Reason
          extend Increase::Internal::Type::Enum

          # The inbound wire transfer was a duplicate.
          DUPLICATE: :duplicate

          # The recipient of the wire transfer requested the funds be returned to the sender.
          CREDITOR_REQUEST: :creditor_request

          def self?.values: () -> ::Array[Increase::Models::InboundWireTransfer::Reversal::reason]
        end
      end

      type status = (:pending | :accepted | :declined | :reversed)

      module Status
        extend Increase::Internal::Type::Enum

        # The Inbound Wire Transfer is awaiting action, will transition automatically if no action is taken.
        PENDING: :pending

        # The Inbound Wire Transfer is accepted.
        ACCEPTED: :accepted

        # The Inbound Wire Transfer was declined.
        DECLINED: :declined

        # The Inbound Wire Transfer was reversed.
        REVERSED: :reversed

        def self?.values: () -> ::Array[Increase::Models::InboundWireTransfer::status]
      end

      type type_ = :inbound_wire_transfer

      module Type
        extend Increase::Internal::Type::Enum

        INBOUND_WIRE_TRANSFER: :inbound_wire_transfer

        def self?.values: () -> ::Array[Increase::Models::InboundWireTransfer::type_]
      end
    end
  end
end
