module Increase
  module Models
    type physical_card_create_params = ({
      card_id: String,
      cardholder: Increase::PhysicalCardCreateParams::Cardholder,
      shipment: Increase::PhysicalCardCreateParams::Shipment,
      physical_card_profile_id: String
    } & Increase::Internal::Type::request_parameters)

    class PhysicalCardCreateParams < Increase::Internal::Type::BaseModel
      extend Increase::Internal::Type::RequestParameters::Converter
      include Increase::Internal::Type::RequestParameters

      attr_accessor card_id: String

      attr_accessor cardholder: Increase::PhysicalCardCreateParams::Cardholder

      attr_accessor shipment: Increase::PhysicalCardCreateParams::Shipment

      attr_reader physical_card_profile_id: String?

      def physical_card_profile_id=: (String) -> String

      def initialize: (card_id: String, cardholder: Increase::PhysicalCardCreateParams::Cardholder, shipment: Increase::PhysicalCardCreateParams::Shipment, ?physical_card_profile_id: String, ?request_options: Increase::request_opts) -> void

      def to_hash: () -> {
        card_id: String,
        cardholder: Increase::PhysicalCardCreateParams::Cardholder,
        shipment: Increase::PhysicalCardCreateParams::Shipment,
        physical_card_profile_id: String,
        request_options: Increase::RequestOptions
      }

      type cardholder = {first_name: String, last_name: String}

      class Cardholder < Increase::Internal::Type::BaseModel
        attr_accessor first_name: String

        attr_accessor last_name: String

        def initialize: (first_name: String, last_name: String) -> void

        def to_hash: () -> {first_name: String, last_name: String}
      end

      type shipment = {
        address: Increase::PhysicalCardCreateParams::Shipment::Address,
        method_: Increase::Models::PhysicalCardCreateParams::Shipment::method_,
        schedule: Increase::Models::PhysicalCardCreateParams::Shipment::schedule
      }

      class Shipment < Increase::Internal::Type::BaseModel
        attr_accessor address: Increase::PhysicalCardCreateParams::Shipment::Address

        attr_accessor method_: Increase::Models::PhysicalCardCreateParams::Shipment::method_

        attr_reader schedule: Increase::Models::PhysicalCardCreateParams::Shipment::schedule?

        def schedule=: (Increase::Models::PhysicalCardCreateParams::Shipment::schedule) -> Increase::Models::PhysicalCardCreateParams::Shipment::schedule

        def initialize: (address: Increase::PhysicalCardCreateParams::Shipment::Address, method_: Increase::Models::PhysicalCardCreateParams::Shipment::method_, ?schedule: Increase::Models::PhysicalCardCreateParams::Shipment::schedule) -> void

        def to_hash: () -> {
          address: Increase::PhysicalCardCreateParams::Shipment::Address,
          method_: Increase::Models::PhysicalCardCreateParams::Shipment::method_,
          schedule: Increase::Models::PhysicalCardCreateParams::Shipment::schedule
        }

        type address = {
          city: String,
          line1: String,
          name: String,
          postal_code: String,
          state: String,
          line2: String,
          line3: String,
          phone_number: String
        }

        class Address < Increase::Internal::Type::BaseModel
          attr_accessor city: String

          attr_accessor line1: String

          attr_accessor name: String

          attr_accessor postal_code: String

          attr_accessor state: String

          attr_reader line2: String?

          def line2=: (String) -> String

          attr_reader line3: String?

          def line3=: (String) -> String

          attr_reader phone_number: String?

          def phone_number=: (String) -> String

          def initialize: (city: String, line1: String, name: String, postal_code: String, state: String, ?line2: String, ?line3: String, ?phone_number: String) -> void

          def to_hash: () -> {
            city: String,
            line1: String,
            name: String,
            postal_code: String,
            state: String,
            line2: String,
            line3: String,
            phone_number: String
          }
        end

        type method_ = (:usps | :fedex_priority_overnight | :fedex_2_day)

        module Method
          extend Increase::Internal::Type::Enum

          # USPS Post with tracking.
          USPS: :usps

          # FedEx Priority Overnight, no signature.
          FEDEX_PRIORITY_OVERNIGHT: :fedex_priority_overnight

          # FedEx 2-day.
          FEDEX_2_DAY: :fedex_2_day

          def self?.values: () -> ::Array[Increase::Models::PhysicalCardCreateParams::Shipment::method_]
        end

        type schedule = (:next_day | :same_day)

        module Schedule
          extend Increase::Internal::Type::Enum

          # The physical card will be shipped one business day after the order is received by the card printer. A card that is submitted to Increase on a Monday evening (Pacific Time) will ship out on Wednesday.
          NEXT_DAY: :next_day

          # The physical card will be shipped on the same business day that the order is received by the card printer. A card that is submitted to Increase on a Monday evening (Pacific Time) will ship out on Tuesday.
          SAME_DAY: :same_day

          def self?.values: () -> ::Array[Increase::Models::PhysicalCardCreateParams::Shipment::schedule]
        end
      end
    end
  end
end
