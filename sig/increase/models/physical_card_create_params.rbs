module Increase
  module Models
    type physical_card_create_params =
      {
        card_id: String,
        cardholder: Increase::Models::PhysicalCardCreateParams::Cardholder,
        shipment: Increase::Models::PhysicalCardCreateParams::Shipment,
        physical_card_profile_id: String
      }
      & Increase::Internal::Type::request_parameters

    class PhysicalCardCreateParams < Increase::BaseModel
      extend Increase::Internal::Type::RequestParameters::Converter
      include Increase::Internal::Type::RequestParameters

      attr_accessor card_id: String

      attr_accessor cardholder: Increase::Models::PhysicalCardCreateParams::Cardholder

      attr_accessor shipment: Increase::Models::PhysicalCardCreateParams::Shipment

      attr_reader physical_card_profile_id: String?

      def physical_card_profile_id=: (String) -> String

      def initialize: (
        card_id: String,
        cardholder: Increase::Models::PhysicalCardCreateParams::Cardholder,
        shipment: Increase::Models::PhysicalCardCreateParams::Shipment,
        ?physical_card_profile_id: String,
        ?request_options: Increase::request_opts
      ) -> void

      def to_hash: -> Increase::Models::physical_card_create_params

      type cardholder = { first_name: String, last_name: String }

      class Cardholder < Increase::BaseModel
        attr_accessor first_name: String

        attr_accessor last_name: String

        def initialize: (first_name: String, last_name: String) -> void

        def to_hash: -> Increase::Models::PhysicalCardCreateParams::cardholder
      end

      type shipment =
        {
          address: Increase::Models::PhysicalCardCreateParams::Shipment::Address,
          method_: Increase::Models::PhysicalCardCreateParams::Shipment::method_
        }

      class Shipment < Increase::BaseModel
        attr_accessor address: Increase::Models::PhysicalCardCreateParams::Shipment::Address

        attr_accessor method_: Increase::Models::PhysicalCardCreateParams::Shipment::method_

        def initialize: (
          address: Increase::Models::PhysicalCardCreateParams::Shipment::Address,
          method_: Increase::Models::PhysicalCardCreateParams::Shipment::method_
        ) -> void

        def to_hash: -> Increase::Models::PhysicalCardCreateParams::shipment

        type address =
          {
            city: String,
            :line1 => String,
            name: String,
            postal_code: String,
            state: String,
            :line2 => String,
            :line3 => String,
            phone_number: String
          }

        class Address < Increase::BaseModel
          attr_accessor city: String

          attr_accessor line1: String

          attr_accessor name: String

          attr_accessor postal_code: String

          attr_accessor state: String

          attr_reader line2: String?

          def line2=: (String) -> String

          attr_reader line3: String?

          def line3=: (String) -> String

          attr_reader phone_number: String?

          def phone_number=: (String) -> String

          def initialize: (
            city: String,
            line1: String,
            name: String,
            postal_code: String,
            state: String,
            ?line2: String,
            ?line3: String,
            ?phone_number: String
          ) -> void

          def to_hash: -> Increase::Models::PhysicalCardCreateParams::Shipment::address
        end

        type method_ = :usps | :fedex_priority_overnight | :fedex_2_day

        module Method
          extend Increase::Enum

          # USPS Post with tracking.
          USPS: :usps

          # FedEx Priority Overnight, no signature.
          FEDEX_PRIORITY_OVERNIGHT: :fedex_priority_overnight

          # FedEx 2-day.
          FEDEX_2_DAY: :fedex_2_day

          def self?.values: -> ::Array[Increase::Models::PhysicalCardCreateParams::Shipment::method_]
        end
      end
    end
  end
end
