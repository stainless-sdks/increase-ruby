module Increase
  module Models
    type account_number_list_params =
      {
        account_id: String,
        ach_debit_status: Increase::Models::AccountNumberListParams::ach_debit_status,
        created_at: Increase::Models::AccountNumberListParams::CreatedAt,
        cursor: String,
        idempotency_key: String,
        limit: Integer,
        status: Increase::Models::AccountNumberListParams::status
      }
      & Increase::request_parameters

    class AccountNumberListParams < Increase::BaseModel
      extend Increase::RequestParameters::Converter
      include Increase::RequestParameters

      attr_reader account_id: String?

      def account_id=: (String) -> String

      attr_reader ach_debit_status: Increase::Models::AccountNumberListParams::ach_debit_status?

      def ach_debit_status=: (
        Increase::Models::AccountNumberListParams::ach_debit_status
      ) -> Increase::Models::AccountNumberListParams::ach_debit_status

      attr_reader created_at: Increase::Models::AccountNumberListParams::CreatedAt?

      def created_at=: (
        Increase::Models::AccountNumberListParams::CreatedAt
      ) -> Increase::Models::AccountNumberListParams::CreatedAt

      attr_reader cursor: String?

      def cursor=: (String) -> String

      attr_reader idempotency_key: String?

      def idempotency_key=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader status: Increase::Models::AccountNumberListParams::status?

      def status=: (
        Increase::Models::AccountNumberListParams::status
      ) -> Increase::Models::AccountNumberListParams::status

      def initialize:
        (
          account_id: String,
          ach_debit_status: Increase::Models::AccountNumberListParams::ach_debit_status,
          created_at: Increase::Models::AccountNumberListParams::CreatedAt,
          cursor: String,
          idempotency_key: String,
          limit: Integer,
          status: Increase::Models::AccountNumberListParams::status,
          request_options: Increase::request_opts
        ) -> void
        | (
          ?Increase::Models::account_number_list_params
          | Increase::BaseModel data
        ) -> void

      def to_hash: -> Increase::Models::account_number_list_params

      type ach_debit_status = :allowed | :blocked

      class ACHDebitStatus < Increase::Enum
        # ACH Debits are allowed.
        ALLOWED: :allowed

        # ACH Debits are blocked.
        BLOCKED: :blocked

        def self.values: -> ::Array[Increase::Models::AccountNumberListParams::ach_debit_status]
      end

      type created_at =
        { after: Time, before: Time, on_or_after: Time, on_or_before: Time }

      class CreatedAt < Increase::BaseModel
        attr_reader after: Time?

        def after=: (Time) -> Time

        attr_reader before: Time?

        def before=: (Time) -> Time

        attr_reader on_or_after: Time?

        def on_or_after=: (Time) -> Time

        attr_reader on_or_before: Time?

        def on_or_before=: (Time) -> Time

        def initialize:
          (
            after: Time,
            before: Time,
            on_or_after: Time,
            on_or_before: Time
          ) -> void
          | (
            ?Increase::Models::AccountNumberListParams::created_at
            | Increase::BaseModel data
          ) -> void

        def to_hash: -> Increase::Models::AccountNumberListParams::created_at
      end

      type status = :active | :disabled | :canceled

      class Status < Increase::Enum
        # The account number is active.
        ACTIVE: :active

        # The account number is temporarily disabled.
        DISABLED: :disabled

        # The account number is permanently disabled.
        CANCELED: :canceled

        def self.values: -> ::Array[Increase::Models::AccountNumberListParams::status]
      end
    end
  end
end
