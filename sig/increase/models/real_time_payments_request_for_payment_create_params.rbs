module Increase
  module Models
    type real_time_payments_request_for_payment_create_params = ({
      amount: Integer,
      debtor: Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::Debtor,
      destination_account_number_id: String,
      expires_at: Date,
      remittance_information: String,
      source_account_number: String,
      source_routing_number: String
    } & Increase::request_parameters)

    class RealTimePaymentsRequestForPaymentCreateParams < Increase::BaseModel
      extend Increase::RequestParameters::Converter
      include Increase::RequestParameters

      attr_accessor amount: Integer

      attr_accessor debtor: Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::Debtor

      attr_accessor destination_account_number_id: String

      attr_accessor expires_at: Date

      attr_accessor remittance_information: String

      attr_accessor source_account_number: String

      attr_accessor source_routing_number: String

      def initialize: (amount: Integer, debtor: Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::Debtor, destination_account_number_id: String, expires_at: Date, remittance_information: String, source_account_number: String, source_routing_number: String, request_options: Increase::request_opts) -> void
                    | (?(Increase::Models::real_time_payments_request_for_payment_create_params | Increase::BaseModel) data) -> void

      def to_hash: () -> Increase::Models::real_time_payments_request_for_payment_create_params

      type debtor = {address: Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::Debtor::Address, name: String}

      class Debtor < Increase::BaseModel
        attr_accessor address: Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::Debtor::Address

        attr_accessor name: String

        def initialize: (address: Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::Debtor::Address, name: String) -> void
                      | (?(Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::debtor | Increase::BaseModel) data) -> void

        def to_hash: () -> Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::debtor

        type address = {country: String, city: String, post_code: String, street_name: String}

        class Address < Increase::BaseModel
          attr_accessor country: String

          attr_reader city: String?

          def city=: (String) -> String

          attr_reader post_code: String?

          def post_code=: (String) -> String

          attr_reader street_name: String?

          def street_name=: (String) -> String

          def initialize: (country: String, city: String, post_code: String, street_name: String) -> void
                        | (?(Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::Debtor::address | Increase::BaseModel) data) -> void

          def to_hash: () -> Increase::Models::RealTimePaymentsRequestForPaymentCreateParams::Debtor::address
        end
      end
    end
  end
end
