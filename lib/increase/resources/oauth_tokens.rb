# frozen_string_literal: true

module Increase
  module Resources
    class OAuthTokens
      # Create an OAuth Token
      #
      # @param params [Increase::Models::OAuthTokenCreateParams, Hash{Symbol=>Object}] .
      #
      #   @option params [Symbol, Increase::Models::OAuthTokenCreateParams::GrantType] :grant_type The credential you request in exchange for the code. In Production, this is
      #     always `authorization_code`. In Sandbox, you can pass either enum value.
      #
      #   @option params [String] :client_id The public identifier for your application.
      #
      #   @option params [String] :client_secret The secret that confirms you own the application. This is redundent given that
      #     the request is made with your API key but it's a required component of OAuth
      #     2.0.
      #
      #   @option params [String] :code The authorization code generated by the user and given to you as a query
      #     parameter.
      #
      #   @option params [String] :production_token The production token you want to exchange for a sandbox token. This is only
      #     available in Sandbox. Set `grant_type` to `production_token` to use this
      #     parameter.
      #
      #   @option params [Increase::RequestOptions, Hash{Symbol=>Object}, nil] :request_options
      #
      # @return [Increase::Models::OAuthToken]
      #
      # @see Increase::Models::OAuthTokenCreateParams
      def create(params)
        parsed, options = Increase::Models::OAuthTokenCreateParams.dump_request(params)
        @client.request(
          method: :post,
          path: "oauth/tokens",
          body: parsed,
          model: Increase::Models::OAuthToken,
          options: options
        )
      end

      # @api private
      #
      # @param client [Increase::Client]
      def initialize(client:)
        @client = client
      end
    end
  end
end
